<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NServiceKit.Interfaces</name>
    </assembly>
    <members>
        <member name="T:NServiceKit.CacheAccess.ICacheClearable">
            <summary>Interface for cache clearable.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClearable.Clear(System.Collections.Generic.IEnumerable{System.String})">
             <summary>Clears this object to its blank/initial state.</summary>
            
             <param name="cacheKeys">A variable-length parameters list containing cache keys.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClearable.Clear(System.String[])">
             <summary>Clears this object to its blank/initial state.</summary>
            
             <param name="cacheKeys">A variable-length parameters list containing cache keys.</param>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICacheClient">
            <summary>
            A common interface implementation that is implemented by most cache providers
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Remove(System.String)">
            <summary>
            Removes the specified item from the cache.
            </summary>
            <param name="key">The identifier for the item to delete.</param>
            <returns>
            true if the item was successfully removed from the cache; false otherwise.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the cache for all the keys provided.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Get``1(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">The identifier for the item to retrieve.</param>
            <returns>
            The retrieved item, or <value>null</value> if the key was not found.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Increment(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. 
            The operation is atomic and happens on the server.
            A non existent value at key starts at 0
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="amount">The amount by which the client wants to increase the item.</param>
            <returns>
            The new value of the item or -1 if not found.
            </returns>
            <remarks>The item must be inserted into the cache before it can be changed. The item must be inserted as a <see cref="T:System.String"/>. The operation only works with <see cref="T:System.UInt32"/> values, so -1 always indicates that the item was not found.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Decrement(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. 
            The operation is atomic and happens on the server.
            A non existent value at key starts at 0
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="amount">The amount by which the client wants to decrease the item.</param>
            <returns>
            The new value of the item or -1 if not found.
            </returns>
            <remarks>The item must be inserted into the cache before it can be changed. The item must be inserted as a <see cref="T:System.String"/>. The operation only works with <see cref="T:System.UInt32"/> values, so -1 always indicates that the item was not found.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Add``1(System.String,``0)">
            <summary>
            Adds a new item into the cache at the specified cache key only if the cache is empty.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>
            true if the item was successfully stored in the cache; false otherwise.
            </returns>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Set``1(System.String,``0)">
            <summary>
            Sets an item into the cache at the cache key specified regardless if it already exists or not.
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Replace``1(System.String,``0)">
            <summary>
            Replaces the item at the cachekey specified only if an items exists at the location already. 
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Add``1(System.String,``0,System.DateTime)">
             <summary>Adds a new item into the cache at the specified cache key only if the cache is empty.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The key used to reference the item.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresAt">The expires at Date/Time.</param>
            
             <returns>true if the item was successfully stored in the cache; false otherwise.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Set``1(System.String,``0,System.DateTime)">
             <summary>Sets an item into the cache at the cache key specified regardless if it already exists or not.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The identifier for the item to delete.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresAt">The expires at Date/Time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Replace``1(System.String,``0,System.DateTime)">
             <summary>Replaces the item at the cachekey specified only if an items exists at the location already.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The identifier for the item to delete.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresAt">The expires at Date/Time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Add``1(System.String,``0,System.TimeSpan)">
             <summary>Adds a new item into the cache at the specified cache key only if the cache is empty.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The key used to reference the item.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresIn">The expires in.</param>
            
             <returns>true if the item was successfully stored in the cache; false otherwise.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Set``1(System.String,``0,System.TimeSpan)">
             <summary>Sets an item into the cache at the cache key specified regardless if it already exists or not.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The identifier for the item to delete.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresIn">The expires in.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.Replace``1(System.String,``0,System.TimeSpan)">
             <summary>Replaces the item at the cachekey specified only if an items exists at the location already.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="key">      The identifier for the item to delete.</param>
             <param name="value">    The object to be inserted into the cache.</param>
             <param name="expiresIn">The expires in.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.FlushAll">
            <summary>
            Invalidates all data on the cache.
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.GetAll``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves multiple items from the cache. 
            The default value of T is set for all keys that do not exist.
            </summary>
            <param name="keys">The list of identifiers for the items to retrieve.</param>
            <returns>
            a Dictionary holding all items indexed by their key.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheClient.SetAll``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Sets multiple items to the cache. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values">The values.</param>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICacheHasContentType">
            <summary>Interface for cache has content type.</summary>
        </member>
        <member name="P:NServiceKit.CacheAccess.ICacheHasContentType.ContentType">
             <summary>Gets the type of the content.</summary>
            
             <value>The type of the content.</value>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICacheManager">
            <summary>Interface for cache manager.</summary>
        </member>
        <member name="T:NServiceKit.CacheAccess.IHasCacheClient">
            <summary>Interface for has cache client.</summary>
        </member>
        <member name="P:NServiceKit.CacheAccess.IHasCacheClient.CacheClient">
             <summary>Gets the cache client.</summary>
            
             <value>The cache client.</value>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheManager.Resolve``1(System.String,System.Func{``0})">
             <summary>Resolves.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="cacheKey">     The cache key.</param>
             <param name="createCacheFn">The create cache function.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheManager.Resolve``1(System.String,System.TimeSpan,System.Func{``0})">
             <summary>Resolves.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="cacheKey">     The cache key.</param>
             <param name="expireIn">     The expire in.</param>
             <param name="createCacheFn">The create cache function.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICacheTextManager">
            <summary>Interface for cache text manager.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheTextManager.ResolveText``1(System.String,System.Func{``0})">
             <summary>Resolve text.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="cacheKey">     The cache key.</param>
             <param name="createCacheFn">The create cache function.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheTextManager.ResolveText``1(System.String,System.TimeSpan,System.Func{``0})">
             <summary>Resolve text.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="cacheKey">     The cache key.</param>
             <param name="expiresIn">    The expires in.</param>
             <param name="createCacheFn">The create cache function.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="P:NServiceKit.CacheAccess.ICacheTextManager.ContentType">
             <summary>Gets the type of the content.</summary>
            
             <value>The type of the content.</value>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICacheTextManagerFactory">
            <summary>Interface for cache text manager factory.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICacheTextManagerFactory.Resolve(System.String)">
             <summary>Resolves.</summary>
            
             <param name="contentType">Type of the content.</param>
            
             <returns>An ICacheTextManager.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICompressableCacheTextManager">
            <summary>Interface for compressable cache text manager.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICompressableCacheTextManager.Resolve``1(System.String,System.String,System.Func{``0})">
             <summary>Resolves.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="compressionType">Type of the compression.</param>
             <param name="cacheKey">       The cache key.</param>
             <param name="createCacheFn">  The create cache function.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.ICompressableCacheTextManagerFactory">
            <summary>Interface for compressable cache text manager factory.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ICompressableCacheTextManagerFactory.Resolve(System.String)">
             <summary>Resolves.</summary>
            
             <param name="contentType">Type of the content.</param>
            
             <returns>An ICompressableCacheTextManager.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.IDeflateProvider">
            <summary>Interface for deflate provider.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IDeflateProvider.Deflate(System.String)">
             <summary>Deflates.</summary>
            
             <param name="text">The text.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IDeflateProvider.Inflate(System.Byte[])">
             <summary>Inflates the given gz buffer.</summary>
            
             <param name="gzBuffer">Buffer for gz data.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.IGZipProvider">
            <summary>Interface for ig zip provider.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IGZipProvider.GZip(System.String)">
             <summary>Zips.</summary>
            
             <param name="text">The text.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IGZipProvider.GUnzip(System.Byte[])">
             <summary>Unzips the given gz buffer.</summary>
            
             <param name="gzBuffer">Buffer for gz data.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.IMemcachedClient">
            <summary>
            A light interface over a cache client.
            This interface was inspired by Enyim.Caching.MemcachedClient
            
            Only the methods that are intended to be used are required, if you require
            extra functionality you can uncomment the unused methods below as they have been
            implemented in DdnMemcachedClient
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Remove(System.String)">
            <summary>
            Removes the specified item from the cache.
            </summary>
            <param name="key">The identifier for the item to delete.</param>
            <returns>
            true if the item was successfully removed from the cache; false otherwise.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the cache for all the keys provided.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Get(System.String)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <param ICTname="key">The identifier for the item to retrieve.</param>
            <param name="key"></param>
            <returns>
            The retrieved item, or <value>null</value> if the key was not found.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Get(System.String,System.UInt64@)">
            <summary>
            Retrieves the specified item from the cache.
            </summary>
            <param ICTname="key">The identifier for the item to retrieve.</param>
            <param name="key"></param>
            <param name="lastModifiedValue"></param>
            <returns>
            The retrieved item, or <value>null</value> if the key was not found.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Increment(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. The operation is atomic and happens on the server.
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="amount">The amount by which the client wants to increase the item.</param>
            <returns>
            The new value of the item or -1 if not found.
            </returns>
            <remarks>The item must be inserted into the cache before it can be changed. The item must be inserted as a <see cref="T:System.String"/>. The operation only works with <see cref="T:System.UInt32"/> values, so -1 always indicates that the item was not found.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Decrement(System.String,System.UInt32)">
            <summary>
            Increments the value of the specified key by the given amount. The operation is atomic and happens on the server.
            </summary>
            <param name="key">The identifier for the item to increment.</param>
            <param name="amount">The amount by which the client wants to decrease the item.</param>
            <returns>
            The new value of the item or -1 if not found.
            </returns>
            <remarks>The item must be inserted into the cache before it can be changed. The item must be inserted as a <see cref="T:System.String"/>. The operation only works with <see cref="T:System.UInt32"/> values, so -1 always indicates that the item was not found.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Add(System.String,System.Object)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>
            true if the item was successfully stored in the cache; false otherwise.
            </returns>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Set(System.String,System.Object)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>
            true if the item was successfully stored in the cache; false otherwise.
            </returns>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Replace(System.String,System.Object)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <returns>
            true if the item was successfully stored in the cache; false otherwise.
            </returns>
            <remarks>The item does not expire unless it is removed due memory pressure.</remarks>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Add(System.String,System.Object,System.DateTime)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiresAt">The time when the item is invalidated in the cache.</param>
            <returns>true if the item was successfully stored in the cache; false otherwise.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Set(System.String,System.Object,System.DateTime)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiresAt">The time when the item is invalidated in the cache.</param>
            <returns>true if the item was successfully stored in the cache; false otherwise.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.Replace(System.String,System.Object,System.DateTime)">
            <summary>
            Inserts an item into the cache with a cache key to reference its location.
            </summary>
            <param name="key">The key used to reference the item.</param>
            <param name="value">The object to be inserted into the cache.</param>
            <param name="expiresAt">The time when the item is invalidated in the cache.</param>
            <returns>true if the item was successfully stored in the cache; false otherwise.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.FlushAll">
            <summary>
            Removes all data from the cache.
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieves multiple items from the cache.
            </summary>
            <param name="keys">The list of identifiers for the items to retrieve.</param>
            <returns>
            a Dictionary holding all items indexed by their key.
            </returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.CheckAndSet(System.String,System.Object,System.UInt64)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="lastModifiedValue"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.CheckAndSet(System.String,System.Object,System.UInt64,System.DateTime)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="lastModifiedValue"></param>
            <param name="expiresAt"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IMemcachedClient.GetAll(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.UInt64}@)">
            <summary>
            
            </summary>
            <param name="keys"></param>
            <param name="lastModifiedValues"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.IPersistenceProviderCache">
            <summary>Interface for persistence provider cache.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.GetById``1(System.Object)">
             <summary>Gets by identifier.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entityId">Identifier for the entity.</param>
            
             <returns>The by identifier.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.GetByIds``1(System.Collections.ICollection)">
             <summary>Gets by identifiers.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entityIds">List of identifiers for the entities.</param>
            
             <returns>The by identifiers.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.SetCache``1(``0)">
             <summary>Sets a cache.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entity">The entity.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.Store``1(``0)">
             <summary>Stores the given entity.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entity">The entity.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.StoreAll``1(``0[])">
             <summary>Stores all.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entities">A variable-length parameters list containing entities.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.ClearAll``1(System.Collections.ICollection)">
             <summary>Clears all described by entityIds.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entityIds">List of identifiers for the entities.</param>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCache.Clear``1(System.Object[])">
             <summary>Clears this object to its blank/initial state.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entityIds">List of identifiers for the entities.</param>
        </member>
        <member name="T:NServiceKit.CacheAccess.IPersistenceProviderCacheFactory">
            <summary>Interface for persistence provider cache factory.</summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCacheFactory.Create(NServiceKit.DataAccess.IPersistenceProviderManager)">
             <summary>Creates a new IPersistenceProviderCache.</summary>
            
             <param name="providerManager">Manager for provider.</param>
            
             <returns>An IPersistenceProviderCache.</returns>
        </member>
        <member name="M:NServiceKit.CacheAccess.IPersistenceProviderCacheFactory.Create(System.String)">
             <summary>Creates a new IPersistenceProviderCache.</summary>
            
             <param name="conntectionString">The conntection string.</param>
            
             <returns>An IPersistenceProviderCache.</returns>
        </member>
        <member name="T:NServiceKit.CacheAccess.ISession">
            <summary>
            A Users Session
            </summary>
        </member>
        <member name="M:NServiceKit.CacheAccess.ISession.Set``1(System.String,``0)">
            <summary>
            Set a typed value at key
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NServiceKit.CacheAccess.ISession.Get``1(System.String)">
            <summary>
            Get a typed value at key
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:NServiceKit.CacheAccess.ISession.Item(System.String)">
            <summary>
            Store any object at key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Configuration.IContainerAdapter">
            <summary>
            Allow delegation of dependencies to other IOC's
            </summary>
        </member>
        <member name="M:NServiceKit.Configuration.IContainerAdapter.TryResolve``1">
            <summary>
            Resolve Property Dependency
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Configuration.IContainerAdapter.Resolve``1">
            <summary>
            Resolve Constructor Dependency
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Configuration.IFactoryProvider">
            <summary>Interface for factory provider.</summary>
        </member>
        <member name="M:NServiceKit.Configuration.IFactoryProvider.Register``1(``0)">
             <summary>Registers this object.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="provider">The provider.</param>
        </member>
        <member name="M:NServiceKit.Configuration.IFactoryProvider.Resolve``1(System.String)">
             <summary>Resolves.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name">The name.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Configuration.IFactoryProvider.ResolveOptional``1(System.String,``0)">
             <summary>Resolve optional.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name">        The name.</param>
             <param name="defaultValue">The default value.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Configuration.IFactoryProvider.Create``1(System.String)">
             <summary>Creates a new T.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name">The name.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="T:NServiceKit.Configuration.IResourceManager">
            <summary>Interface for resource manager.</summary>
        </member>
        <member name="M:NServiceKit.Configuration.IResourceManager.GetString(System.String)">
             <summary>Gets a string.</summary>
            
             <param name="name">The name.</param>
            
             <returns>The string.</returns>
        </member>
        <member name="M:NServiceKit.Configuration.IResourceManager.GetList(System.String)">
             <summary>Gets a list.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The list.</returns>
        </member>
        <member name="M:NServiceKit.Configuration.IResourceManager.GetDictionary(System.String)">
             <summary>Gets a dictionary.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The dictionary.</returns>
        </member>
        <member name="M:NServiceKit.Configuration.IResourceManager.Get``1(System.String,``0)">
             <summary>Gets.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name">        The name.</param>
             <param name="defaultValue">The default value.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="T:NServiceKit.Configuration.ITypeFactory">
            <summary>Interface for type factory.</summary>
        </member>
        <member name="M:NServiceKit.Configuration.ITypeFactory.CreateInstance(System.Type)">
             <summary>Creates an instance.</summary>
            
             <param name="type">The type.</param>
            
             <returns>The new instance.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.Criteria.ICriteria">
            <summary>Interface for criteria.</summary>
        </member>
        <member name="T:NServiceKit.DataAccess.Criteria.IOrderAscendingCriteria">
            <summary>Interface for order ascending criteria.</summary>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.IOrderAscendingCriteria.OrderedAscendingBy">
             <summary>Gets who ordered ascending this object.</summary>
            
             <value>Describes who ordered ascending this object.</value>
        </member>
        <member name="T:NServiceKit.DataAccess.Criteria.IOrderDescendingCriteria">
            <summary>Interface for order descending criteria.</summary>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.IOrderDescendingCriteria.OrderedDescendingBy">
             <summary>Gets who ordered descending this object.</summary>
            
             <value>Describes who ordered descending this object.</value>
        </member>
        <member name="T:NServiceKit.DataAccess.Criteria.IPagingCriteria">
            <summary>Interface for paging criteria.</summary>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.IPagingCriteria.ResultOffset">
             <summary>Gets the result offset.</summary>
            
             <value>The result offset.</value>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.IPagingCriteria.ResultLimit">
             <summary>Gets the result limit.</summary>
            
             <value>The result limit.</value>
        </member>
        <member name="T:NServiceKit.DataAccess.Criteria.PagingCriteria">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceKit.DataAccess.Criteria.PagingCriteria.#ctor(System.UInt32,System.UInt32)">
            <summary>
            
            </summary>
            <param name="resultOffset"></param>
            <param name="resultLimit"></param>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.PagingCriteria.ResultOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.DataAccess.Criteria.PagingCriteria.ResultLimit">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceKit.DataAccess.DataAccessException">
            <summary>Exception for signalling data access errors.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.DataAccessException.#ctor">
            <summary>Initializes a new instance of the NServiceKit.DataAccess.DataAccessException class.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.DataAccessException.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.DataAccess.DataAccessException class.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.DataAccessException.#ctor(System.String,System.Exception)">
             <summary>Initializes a new instance of the NServiceKit.DataAccess.DataAccessException class.</summary>
            
             <param name="message">       The message.</param>
             <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:NServiceKit.DataAccess.IAggregatable">
            <summary>Interface for aggregatable.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IAggregatable.GetAvg``1(``0,System.String)">
             <summary>Finds the avg of the given arguments.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">   The entity.</param>
             <param name="fieldName">Name of the field.</param>
            
             <returns>The calculated average.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IAggregatable.GetCount``1(``0,System.String)">
             <summary>Gets a count.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">   The entity.</param>
             <param name="fieldName">Name of the field.</param>
            
             <returns>The count.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IAggregatable.GetMin``1(``0,System.String)">
             <summary>Finds the min of the given arguments.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">   The entity.</param>
             <param name="fieldName">Name of the field.</param>
            
             <returns>The calculated minimum.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IAggregatable.GetMax``1(``0,System.String)">
             <summary>Finds the max of the given arguments.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">   The entity.</param>
             <param name="fieldName">Name of the field.</param>
            
             <returns>The calculated maximum.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IAggregatable.GetSum``1(``0,System.String)">
             <summary>Gets a sum.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">   The entity.</param>
             <param name="fieldName">Name of the field.</param>
            
             <returns>The sum.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IBasicPersistenceProvider">
            <summary>Interface for basic persistence provider.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.GetById``1(System.Object)">
             <summary>Gets by identifier.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="id">The identifier.</param>
            
             <returns>The by identifier.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.GetByIds``1(System.Collections.ICollection)">
             <summary>Gets by identifiers.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="ids">The identifiers.</param>
            
             <returns>The by identifiers.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.Store``1(``0)">
             <summary>Stores the given entity.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">The entity.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.StoreAll``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>Stores all.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entities">The entities.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.Delete``1(``0)">
             <summary>Deletes the given entity.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">The entity.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.DeleteById``1(System.Object)">
             <summary>Deletes the by identifier described by ID.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="id">The identifier.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.DeleteByIds``1(System.Collections.ICollection)">
             <summary>Deletes the by identifiers described by ids.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="ids">The identifiers.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider.DeleteAll``1">
             <summary>Deletes all.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
        </member>
        <member name="T:NServiceKit.DataAccess.IBasicPersistenceProvider`1">
            <summary>
            For providers that want a cleaner API with a little more perf
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.GetById(System.Object)">
             <summary>Gets by identifier.</summary>
            
             <param name="id">The identifier.</param>
            
             <returns>The by identifier.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.GetByIds(System.Collections.IEnumerable)">
             <summary>Gets by identifiers.</summary>
            
             <param name="ids">The identifiers.</param>
            
             <returns>The by identifiers.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.Store(`0)">
             <summary>Stores the given entity.</summary>
            
             <param name="entity">The entity to delete.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.StoreAll(System.Collections.Generic.IEnumerable{`0})">
             <summary>Stores all.</summary>
            
             <param name="entities">The entities.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.Delete(`0)">
             <summary>Deletes the given entity.</summary>
            
             <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.DeleteById(System.Object)">
             <summary>Deletes the by identifier described by ID.</summary>
            
             <param name="id">The identifier.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.DeleteByIds(System.Collections.IEnumerable)">
             <summary>Deletes the by identifiers described by ids.</summary>
            
             <param name="ids">The identifiers.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IBasicPersistenceProvider`1.DeleteAll">
            <summary>Deletes all.</summary>
        </member>
        <member name="T:NServiceKit.DataAccess.IPersistenceProvider">
            <summary>Interface for persistence provider.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.GetAll``1">
             <summary>Gets all.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.GetAllOrderedBy``1(System.String,System.Boolean)">
             <summary>Gets all ordered by.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="fieldName">Name of the field.</param>
             <param name="sortAsc">  true to sort ascending.</param>
            
             <returns>all ordered by.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.FindByValue``1(System.String,System.Object)">
             <summary>Searches for the first value.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name"> The name.</param>
             <param name="value">The value.</param>
            
             <returns>The found value.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.FindAllByValue``1(System.String,System.Object)">
             <summary>Searches for all by value.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name"> The name.</param>
             <param name="value">The value.</param>
            
             <returns>The found all by value.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.FindByValues``1(System.String,System.Collections.ICollection)">
             <summary>Searches for the first values.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="name">  The name.</param>
             <param name="values">The values.</param>
            
             <returns>The found values.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.Flush">
            <summary>Flushes this object.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.StoreAll``1(System.Collections.Generic.IList{``0})">
             <summary>Stores all.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entities">The entities.</param>
            
             <returns>A list of.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.DeleteAll``1(System.Collections.Generic.IList{``0})">
             <summary>Deletes all described by entities.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entities">The entities.</param>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProvider.BeginTransaction">
             <summary>Begins a transaction.</summary>
            
             <returns>An ITransactionContext.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IPersistenceProviderManager">
            <summary>
            Manages a connection to a persistance provider
            </summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProviderManager.GetProvider">
             <summary>Gets the provider.</summary>
            
             <returns>The provider.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IPersistenceProviderManagerFactory">
            <summary>Interface for persistence provider manager factory.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IPersistenceProviderManagerFactory.CreateProviderManager(System.String)">
             <summary>Creates provider manager.</summary>
            
             <param name="connectionString">The connection string.</param>
            
             <returns>The new provider manager.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IQueryable">
            <summary>Interface for queryable.</summary>
        </member>
        <member name="T:NServiceKit.DataAccess.IQueryableByExample">
            <summary>Interface for queryable by example.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IQueryableByExample.QueryByExample``1(System.Object)">
             <summary>Queries by example.</summary>
            
             <typeparam name="Extent">Type of the extent.</typeparam>
             <param name="template">The template.</param>
            
             <returns>The by example.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IQueryableByPredicate">
            <summary>Interface for queryable by predicate.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IQueryableByPredicate.Query``1(System.Predicate{``0})">
             <summary>Queries the given match.</summary>
            
             <typeparam name="Extent">Type of the extent.</typeparam>
             <param name="match">Specifies the match.</param>
            
             <returns>A list of.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IQueryableByComparer">
            <summary>Interface for queryable by comparer.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IQueryableByComparer.Query``1(System.Collections.Generic.IComparer{``0})">
             <summary>Queries the given comparer.</summary>
            
             <typeparam name="Extent">Type of the extent.</typeparam>
             <param name="comparer">The comparer.</param>
            
             <returns>A list of.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IQueryablePersistenceProvider">
            <summary>Interface for queryable persistence provider.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.IQueryablePersistenceProvider.GetAll``1(NServiceKit.DataAccess.Criteria.ICriteria)">
             <summary>Gets all.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="criteria">The criteria.</param>
            
             <returns>all.</returns>
        </member>
        <member name="T:NServiceKit.DataAccess.IResultSet`1">
             <summary>Interface for result set.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="P:NServiceKit.DataAccess.IResultSet`1.Offset">
             <summary>Gets the offset.</summary>
            
             <value>The offset.</value>
        </member>
        <member name="P:NServiceKit.DataAccess.IResultSet`1.TotalCount">
             <summary>Gets the number of totals.</summary>
            
             <value>The total number of count.</value>
        </member>
        <member name="P:NServiceKit.DataAccess.IResultSet`1.Results">
             <summary>Gets the results.</summary>
            
             <value>The results.</value>
        </member>
        <member name="T:NServiceKit.DataAccess.ITransactionContext">
            <summary>Interface for transaction context.</summary>
        </member>
        <member name="M:NServiceKit.DataAccess.ITransactionContext.Commit">
             <summary>Commits this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.DataAccess.ITransactionContext.Rollback">
             <summary>Rollbacks this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="T:NServiceKit.DataAnnotations.AliasAttribute">
            <summary>Attribute for alias.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.AliasAttribute.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.AliasAttribute class.</summary>
            
             <param name="name">The name.</param>
        </member>
        <member name="P:NServiceKit.DataAnnotations.AliasAttribute.Name">
             <summary>Gets or sets the name.</summary>
            
             <value>The name.</value>
        </member>
        <member name="T:NServiceKit.DataAnnotations.AutoIncrementAttribute">
            <summary>Attribute for automatic increment.</summary>
        </member>
        <member name="T:NServiceKit.DataAnnotations.CompositeIndexAttribute">
            <summary>Attribute for composite index.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.CompositeIndexAttribute.#ctor">
            <summary>Initializes a new instance of the NServiceKit.DataAnnotations.CompositeIndexAttribute class.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.CompositeIndexAttribute.#ctor(System.String[])">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.CompositeIndexAttribute class.</summary>
            
             <param name="fieldNames">A list of names of the fields.</param>
        </member>
        <member name="M:NServiceKit.DataAnnotations.CompositeIndexAttribute.#ctor(System.Boolean,System.String[])">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.CompositeIndexAttribute class.</summary>
            
             <param name="unique">    true if unique, false if not.</param>
             <param name="fieldNames">A list of names of the fields.</param>
        </member>
        <member name="P:NServiceKit.DataAnnotations.CompositeIndexAttribute.FieldNames">
             <summary>Gets or sets a list of names of the fields.</summary>
            
             <value>A list of names of the fields.</value>
        </member>
        <member name="P:NServiceKit.DataAnnotations.CompositeIndexAttribute.Unique">
             <summary>Gets or sets a value indicating whether the unique.</summary>
            
             <value>true if unique, false if not.</value>
        </member>
        <member name="P:NServiceKit.DataAnnotations.CompositeIndexAttribute.Name">
             <summary>Gets or sets the name.</summary>
            
             <value>The name.</value>
        </member>
        <member name="T:NServiceKit.DataAnnotations.DefaultAttribute">
            <summary>Attribute for default.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.DefaultAttribute.#ctor(System.Int32)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.DefaultAttribute class.</summary>
            
             <param name="intValue">The int value.</param>
        </member>
        <member name="M:NServiceKit.DataAnnotations.DefaultAttribute.#ctor(System.Double)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.DefaultAttribute class.</summary>
            
             <param name="doubleValue">The double value.</param>
        </member>
        <member name="M:NServiceKit.DataAnnotations.DefaultAttribute.#ctor(System.Type,System.String)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.DefaultAttribute class.</summary>
            
             <param name="defaultType"> The default type.</param>
             <param name="defaultValue">The default value.</param>
        </member>
        <member name="P:NServiceKit.DataAnnotations.DefaultAttribute.IntValue">
             <summary>Gets or sets the int value.</summary>
            
             <value>The int value.</value>
        </member>
        <member name="P:NServiceKit.DataAnnotations.DefaultAttribute.DoubleValue">
             <summary>Gets or sets the double value.</summary>
            
             <value>The double value.</value>
        </member>
        <member name="P:NServiceKit.DataAnnotations.DefaultAttribute.DefaultType">
             <summary>Gets or sets the default type.</summary>
            
             <value>The default type.</value>
        </member>
        <member name="P:NServiceKit.DataAnnotations.DefaultAttribute.DefaultValue">
             <summary>Gets or sets the default value.</summary>
            
             <value>The default value.</value>
        </member>
        <member name="T:NServiceKit.DataAnnotations.IndexAttribute">
            <summary>Attribute for index.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.IndexAttribute.#ctor">
            <summary>Initializes a new instance of the NServiceKit.DataAnnotations.IndexAttribute class.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.IndexAttribute.#ctor(System.Boolean)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.IndexAttribute class.</summary>
            
             <param name="unique">true if unique, false if not.</param>
        </member>
        <member name="P:NServiceKit.DataAnnotations.IndexAttribute.Unique">
             <summary>Gets or sets a value indicating whether the unique.</summary>
            
             <value>true if unique, false if not.</value>
        </member>
        <member name="T:NServiceKit.DataAnnotations.ReferencesAttribute">
            <summary>Attribute for references.</summary>
        </member>
        <member name="M:NServiceKit.DataAnnotations.ReferencesAttribute.#ctor(System.Type)">
             <summary>Initializes a new instance of the NServiceKit.DataAnnotations.ReferencesAttribute class.</summary>
            
             <param name="type">The type.</param>
        </member>
        <member name="P:NServiceKit.DataAnnotations.ReferencesAttribute.Type">
             <summary>Gets or sets the type.</summary>
            
             <value>The type.</value>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommand`1">
             <summary>Interface for command.</summary>
            
             <typeparam name="ReturnType">Type of the return type.</typeparam>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Command.ICommand`1.Execute">
             <summary>Gets the execute.</summary>
            
             <returns>A ReturnType.</returns>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommandExec">
            <summary>Interface for command execute.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommandIEnumerable`1">
             <summary>Interface for command i enumerable.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommandIList`1">
             <summary>Interface for command i list.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommandList`1">
             <summary>Interface for command list.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Command.ICommandVoid">
            <summary>Interface for command void.</summary>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Command.ICommandVoid.Execute">
            <summary>Executes this object.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasGuidId">
            <summary>Interface for has unique identifier.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasId`1">
             <summary>Interface for has identifier.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="P:NServiceKit.DesignPatterns.Model.IHasId`1.Id">
             <summary>Gets the identifier.</summary>
            
             <value>The identifier.</value>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasIntId">
            <summary>Interface for has int identifier.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasLongId">
            <summary>Interface for has long identifier.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasNamed`1">
             <summary>Interface for has named.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="P:NServiceKit.DesignPatterns.Model.IHasNamed`1.Item(System.String)">
             <summary>Indexer to get or set items within this collection using array index syntax.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>The indexed item.</returns>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasNamedCollection`1">
             <summary>Interface for has named collection.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasNamedList`1">
             <summary>Interface for has named list.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasStringId">
            <summary>Interface for has string identifier.</summary>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasUserId">
            <summary>Interface for has user identifier.</summary>
        </member>
        <member name="P:NServiceKit.DesignPatterns.Model.IHasUserId.UserId">
             <summary>Gets the identifier of the user.</summary>
            
             <value>The identifier of the user.</value>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Model.IHasUserSession">
            <summary>Interface for has user session.</summary>
        </member>
        <member name="P:NServiceKit.DesignPatterns.Model.IHasUserSession.UserId">
             <summary>Gets the identifier of the user.</summary>
            
             <value>The identifier of the user.</value>
        </member>
        <member name="P:NServiceKit.DesignPatterns.Model.IHasUserSession.SessionId">
             <summary>Gets the identifier of the session.</summary>
            
             <value>The identifier of the session.</value>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Serialization.IStringDeserializer">
            <summary>Interface for string deserializer.</summary>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.IStringDeserializer.Parse``1(System.String)">
             <summary>Parses.</summary>
            
             <typeparam name="To">Type of to.</typeparam>
             <param name="serializedText">The serialized text.</param>
            
             <returns>To.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.IStringDeserializer.Parse(System.String,System.Type)">
             <summary>Parses.</summary>
            
             <param name="serializedText">The serialized text.</param>
             <param name="type">          The type.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Serialization.IStringSerializer">
            <summary>Interface for string serializer.</summary>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.IStringSerializer.Parse``1(``0)">
             <summary>Parses the given from.</summary>
            
             <typeparam name="TFrom">Type of from.</typeparam>
             <param name="from">Source for the.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Serialization.ITextSerializer">
            <summary>Interface for text serializer.</summary>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.DeserializeFromString(System.String,System.Type)">
             <summary>Deserialize from string.</summary>
            
             <param name="json">      The JSON.</param>
             <param name="returnType">Type of the return.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.DeserializeFromString``1(System.String)">
             <summary>Deserialize from string.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="json">The JSON.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.DeserializeFromStream``1(System.IO.Stream)">
             <summary>Deserialize from stream.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="stream">The stream.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.DeserializeFromStream(System.Type,System.IO.Stream)">
             <summary>Deserialize from stream.</summary>
            
             <param name="type">  The type.</param>
             <param name="stream">The stream.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.SerializeToString``1(``0)">
             <summary>Serialize to string.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="obj">The object.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Serialization.ITextSerializer.SerializeToStream``1(``0,System.IO.Stream)">
             <summary>Serialize to stream.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="obj">   The object.</param>
             <param name="stream">The stream.</param>
        </member>
        <member name="T:NServiceKit.DesignPatterns.Translator.ITranslator`2">
             <summary>Interface for translator.</summary>
            
             <typeparam name="To">  Type of to.</typeparam>
             <typeparam name="From">Type of from.</typeparam>
        </member>
        <member name="M:NServiceKit.DesignPatterns.Translator.ITranslator`2.Parse(`1)">
             <summary>Parses the given from.</summary>
            
             <param name="from">Source for the.</param>
            
             <returns>To.</returns>
        </member>
        <member name="T:NServiceKit.Logging.ILog">
            <summary>
            Logs a message in a running application
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Debug(System.Object)">
            <summary>
            Logs a Debug message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Debug(System.Object,System.Exception)">
            <summary>
            Logs a Debug message and exception.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.DebugFormat(System.String,System.Object[])">
            <summary>
            Logs a Debug format message.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Error(System.Object)">
            <summary>
            Logs a Error message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Error(System.Object,System.Exception)">
            <summary>
            Logs a Error message and exception.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.ErrorFormat(System.String,System.Object[])">
            <summary>
            Logs a Error format message.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Fatal(System.Object)">
            <summary>
            Logs a Fatal message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Fatal(System.Object,System.Exception)">
            <summary>
            Logs a Fatal message and exception.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.FatalFormat(System.String,System.Object[])">
            <summary>
            Logs a Error format message.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Info(System.Object)">
            <summary>
            Logs an Info message and exception.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Info(System.Object,System.Exception)">
            <summary>
            Logs an Info message and exception.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.InfoFormat(System.String,System.Object[])">
            <summary>
            Logs an Info format message.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Warn(System.Object)">
            <summary>
            Logs a Warning message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.Warn(System.Object,System.Exception)">
            <summary>
            Logs a Warning message and exception.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.ILog.WarnFormat(System.String,System.Object[])">
            <summary>
            Logs a Warning format message.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="P:NServiceKit.Logging.ILog.IsDebugEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is debug enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:NServiceKit.Logging.ILogFactory">
            <summary>
            Factory to create ILog instances
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.ILogFactory.GetLogger(System.Type)">
            <summary>
            Gets the logger.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Logging.ILogFactory.GetLogger(System.String)">
            <summary>
            Gets the logger.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Logging.LogManager">
            <summary>
            Logging API for this library. You can inject your own implementation otherwise
            will use the DebugLogFactory to write to System.Diagnostics.Debug
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.LogManager.GetLogger(System.Type)">
            <summary>
            Gets the logger.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Logging.LogManager.GetLogger(System.String)">
            <summary>
            Gets the logger.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="P:NServiceKit.Logging.LogManager.LogFactory">
            <summary>
            Gets or sets the log factory.
            Use this to override the factory that is used to create loggers
            </summary>
            <value>The log factory.</value>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.ConsoleLogFactory">
            <summary>
            Creates a Console Logger, that logs all messages to: System.Console
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogFactory.GetLogger(System.Type)">
             <summary>Gets the logger.</summary>
            
             <param name="type">The type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogFactory.GetLogger(System.String)">
             <summary>Gets the logger.</summary>
            
             <param name="typeName">Name of the type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.ConsoleLogger">
            <summary>
            Default logger is to Console.WriteLine
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Log(System.Object,System.Exception)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.LogFormat(System.Object,System.Object[])">
            <summary>
            Logs the format.
            </summary>
            <param name="message">The message.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Log(System.Object)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Debug(System.Object,System.Exception)">
             <summary>Logs a Debug message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Debug(System.Object)">
             <summary>Logs a Debug message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.DebugFormat(System.String,System.Object[])">
             <summary>Logs a Debug format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Error(System.Object,System.Exception)">
             <summary>Logs a Error message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Error(System.Object)">
             <summary>Logs a Error message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.ErrorFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Fatal(System.Object,System.Exception)">
             <summary>Logs a Fatal message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Fatal(System.Object)">
             <summary>Logs a Fatal message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.FatalFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Info(System.Object,System.Exception)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Info(System.Object)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.InfoFormat(System.String,System.Object[])">
             <summary>Logs an Info format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Warn(System.Object,System.Exception)">
             <summary>Logs a Warning message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.Warn(System.Object)">
             <summary>Logs a Warning message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.ConsoleLogger.WarnFormat(System.String,System.Object[])">
             <summary>Logs a Warning format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="P:NServiceKit.Logging.Support.Logging.ConsoleLogger.IsDebugEnabled">
             <summary>Gets a value indicating whether this instance is debug enabled.</summary>
            
             <value><c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.DebugLogFactory">
            <summary>
            Creates a Debug Logger, that logs all messages to: System.Diagnostics.Debug
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogFactory.GetLogger(System.Type)">
             <summary>Gets the logger.</summary>
            
             <param name="type">The type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogFactory.GetLogger(System.String)">
             <summary>Gets the logger.</summary>
            
             <param name="typeName">Name of the type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.DebugLogger">
            <summary>
            Default logger is to System.Diagnostics.Debug.WriteLine
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Log(System.Object,System.Exception)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.LogFormat(System.Object,System.Object[])">
            <summary>
            Logs the format.
            </summary>
            <param name="message">The message.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Log(System.Object)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Debug(System.Object,System.Exception)">
             <summary>Logs a Debug message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Debug(System.Object)">
             <summary>Logs a Debug message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.DebugFormat(System.String,System.Object[])">
             <summary>Logs a Debug format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Error(System.Object,System.Exception)">
             <summary>Logs a Error message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Error(System.Object)">
             <summary>Logs a Error message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.ErrorFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Fatal(System.Object,System.Exception)">
             <summary>Logs a Fatal message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Fatal(System.Object)">
             <summary>Logs a Fatal message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.FatalFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Info(System.Object,System.Exception)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Info(System.Object)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.InfoFormat(System.String,System.Object[])">
             <summary>Logs an Info format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Warn(System.Object,System.Exception)">
             <summary>Logs a Warning message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.Warn(System.Object)">
             <summary>Logs a Warning message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.DebugLogger.WarnFormat(System.String,System.Object[])">
             <summary>Logs a Warning format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="P:NServiceKit.Logging.Support.Logging.DebugLogger.IsDebugEnabled">
             <summary>Gets a value indicating whether this instance is debug enabled.</summary>
            
             <value><c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.NullDebugLogger">
            <summary>
            Default logger is to System.Diagnostics.Debug.Print
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.DebugLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Log(System.Object,System.Exception)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.LogFormat(System.Object,System.Object[])">
            <summary>
            Logs the format.
            </summary>
            <param name="message">The message.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Log(System.Object)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Debug(System.Object,System.Exception)">
             <summary>Logs a Debug message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Debug(System.Object)">
             <summary>Logs a Debug message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.DebugFormat(System.String,System.Object[])">
             <summary>Logs a Debug format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Error(System.Object,System.Exception)">
             <summary>Logs a Error message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Error(System.Object)">
             <summary>Logs a Error message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.ErrorFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Fatal(System.Object,System.Exception)">
             <summary>Logs a Fatal message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Fatal(System.Object)">
             <summary>Logs a Fatal message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.FatalFormat(System.String,System.Object[])">
             <summary>Logs a Error format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Info(System.Object,System.Exception)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Info(System.Object)">
             <summary>Logs an Info message and exception.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.InfoFormat(System.String,System.Object[])">
             <summary>Logs an Info format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Warn(System.Object,System.Exception)">
             <summary>Logs a Warning message and exception.</summary>
            
             <param name="message">  The message.</param>
             <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.Warn(System.Object)">
             <summary>Logs a Warning message.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullDebugLogger.WarnFormat(System.String,System.Object[])">
             <summary>Logs a Warning format message.</summary>
            
             <param name="format">The format.</param>
             <param name="args">  The args.</param>
        </member>
        <member name="P:NServiceKit.Logging.Support.Logging.NullDebugLogger.IsDebugEnabled">
             <summary>Gets a value indicating whether this instance is debug enabled.</summary>
            
             <value><c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.NullLogFactory">
            <summary>
            Creates a Debug Logger, that logs all messages to: System.Diagnostics.Debug
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullLogFactory.GetLogger(System.Type)">
             <summary>Gets the logger.</summary>
            
             <param name="type">The type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.NullLogFactory.GetLogger(System.String)">
             <summary>Gets the logger.</summary>
            
             <param name="typeName">Name of the type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.TestLogFactory">
            <summary>
            Creates a test Logger, that stores all log messages in a member list
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogFactory.GetLogger(System.Type)">
             <summary>Gets the logger.</summary>
            
             <param name="type">The type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogFactory.GetLogger(System.String)">
             <summary>Gets the logger.</summary>
            
             <param name="typeName">Name of the type.</param>
            
             <returns>The logger.</returns>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.TestLogger">
            <summary>
            Tests logger which  stores all log messages in a member list which can be examined later
            
            Made public so its testable
            </summary>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.TestLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.Logging.Support.Logging.TestLogger"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.GetLogs">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Log(NServiceKit.Logging.Support.Logging.TestLogger.Levels,System.Object,System.Exception)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level"></param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.LogFormat(NServiceKit.Logging.Support.Logging.TestLogger.Levels,System.Object,System.Object[])">
            <summary>
            Logs the format.
            </summary>
            <param name="level"></param>
            <param name="message">The message.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Log(NServiceKit.Logging.Support.Logging.TestLogger.Levels,System.Object)">
            <summary>
            Logs the specified message.
            </summary>
            <param name="level"></param>
            <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Debug(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Debug(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.DebugFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Error(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Error(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.ErrorFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Fatal(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Fatal(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.FatalFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Info(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Info(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.InfoFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Warn(System.Object,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.Warn(System.Object)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NServiceKit.Logging.Support.Logging.TestLogger.WarnFormat(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="P:NServiceKit.Logging.Support.Logging.TestLogger.IsDebugEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceKit.Logging.Support.Logging.TestLogger.Levels">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceKit.Logging.Support.Logging.TestLogger.Levels.DEBUG">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceKit.Logging.Support.Logging.TestLogger.Levels.ERROR">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceKit.Logging.Support.Logging.TestLogger.Levels.FATAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceKit.Logging.Support.Logging.TestLogger.Levels.INFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:NServiceKit.Logging.Support.Logging.TestLogger.Levels.WARN">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceKit.LogicFacade.IApplicationContext">
            <summary>Interface for application context.</summary>
        </member>
        <member name="M:NServiceKit.LogicFacade.IApplicationContext.Get``1">
             <summary>Gets the get.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
            
             <returns>A T.</returns>
        </member>
        <member name="P:NServiceKit.LogicFacade.IApplicationContext.Factory">
             <summary>Gets the factory.</summary>
            
             <value>The factory.</value>
        </member>
        <member name="P:NServiceKit.LogicFacade.IApplicationContext.Cache">
             <summary>Gets the cache.</summary>
            
             <value>The cache.</value>
        </member>
        <member name="P:NServiceKit.LogicFacade.IApplicationContext.Resources">
             <summary>Gets the resources.</summary>
            
             <value>The resources.</value>
        </member>
        <member name="T:NServiceKit.LogicFacade.IInitContext">
            <summary>Interface for initialise context.</summary>
        </member>
        <member name="P:NServiceKit.LogicFacade.IInitContext.InitialisedObject">
             <summary>Gets the initialised object.</summary>
            
             <value>The initialised object.</value>
        </member>
        <member name="T:NServiceKit.LogicFacade.ILogicFacade">
            <summary>Interface for logic facade.</summary>
        </member>
        <member name="M:NServiceKit.LogicFacade.ILogicFacade.AcquireInitContext(NServiceKit.LogicFacade.InitOptions)">
             <summary>Acquires the initialise context described by options.</summary>
            
             <param name="options">Options for controlling the operation.</param>
            
             <returns>An IInitContext.</returns>
        </member>
        <member name="T:NServiceKit.LogicFacade.InitOptions">
            <summary>Bitfield of flags for specifying InitOptions.</summary>
        </member>
        <member name="F:NServiceKit.LogicFacade.InitOptions.None">
            <summary>A binary constant representing the none flag.</summary>
        </member>
        <member name="F:NServiceKit.LogicFacade.InitOptions.InitialiseOnly">
            <summary>A binary constant representing the initialise only flag.</summary>
        </member>
        <member name="T:NServiceKit.LogicFacade.IOperationContext">
            <summary>Interface for operation context.</summary>
        </member>
        <member name="P:NServiceKit.LogicFacade.IOperationContext.Application">
             <summary>Gets the application.</summary>
            
             <value>The application.</value>
        </member>
        <member name="P:NServiceKit.LogicFacade.IOperationContext.Request">
             <summary>Gets the request.</summary>
            
             <value>The request.</value>
        </member>
        <member name="T:NServiceKit.LogicFacade.IServiceModelFinder">
            <summary>
            The same functionality is on IServiceResolver
            </summary>
        </member>
        <member name="M:NServiceKit.LogicFacade.IServiceModelFinder.FindTypeByOperation(System.String,System.Nullable{System.Int32})">
             <summary>Searches for the first type by operation.</summary>
            
             <param name="operationName">Name of the operation.</param>
             <param name="version">      The version.</param>
            
             <returns>The found type by operation.</returns>
        </member>
        <member name="T:NServiceKit.LogicFacade.IXmlRequest">
            <summary>Interface for XML request.</summary>
        </member>
        <member name="P:NServiceKit.LogicFacade.IXmlRequest.Xml">
             <summary>Gets the XML.</summary>
            
             <value>The XML.</value>
        </member>
        <member name="T:NServiceKit.Messaging.IMessage">
            <summary>Interface for message.</summary>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.CreatedDate">
             <summary>Gets the created date.</summary>
            
             <value>The created date.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.Priority">
             <summary>Gets or sets the priority.</summary>
            
             <value>The priority.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.RetryAttempts">
             <summary>Gets or sets the retry attempts.</summary>
            
             <value>The retry attempts.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.ReplyId">
             <summary>Gets or sets the identifier of the reply.</summary>
            
             <value>The identifier of the reply.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.ReplyTo">
             <summary>Gets or sets the reply to.</summary>
            
             <value>The reply to.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.Options">
             <summary>Gets or sets options for controlling the operation.</summary>
            
             <value>The options.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.Error">
             <summary>Gets or sets the error.</summary>
            
             <value>The error.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessage.Body">
             <summary>Gets or sets the body.</summary>
            
             <value>The body.</value>
        </member>
        <member name="T:NServiceKit.Messaging.IMessage`1">
             <summary>Interface for message.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.Messaging.IMessage`1.GetBody">
             <summary>Gets the body.</summary>
            
             <returns>The body.</returns>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageFactory">
            <summary>Interface for message factory.</summary>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageQueueClientFactory">
            <summary>Interface for message queue client factory.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClientFactory.CreateMessageQueueClient">
             <summary>Creates message queue client.</summary>
            
             <returns>The new message queue client.</returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageFactory.CreateMessageProducer">
             <summary>Creates message producer.</summary>
            
             <returns>The new message producer.</returns>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageProducer">
            <summary>Interface for message producer.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageProducer.Publish``1(``0)">
             <summary>Publishes the given message.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="messageBody">The message body.</param>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageProducer.Publish``1(NServiceKit.Messaging.IMessage{``0})">
             <summary>Publishes the given message.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="message">The message.</param>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageQueueClient">
            <summary>Interface for message queue client.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClient.Publish(System.String,System.Byte[])">
            <summary>
            Publish the specified message into the durable queue @queueName
            </summary>
            <param name="queueName"></param>
            <param name="messageBytes"></param>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClient.Notify(System.String,System.Byte[])">
            <summary>
            Publish the specified message into the transient queue @queueName
            </summary>
            <param name="queueName"></param>
            <param name="messageBytes"></param>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClient.Get(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Synchronous blocking get.
            </summary>
            <param name="queueName"></param>
            <param name="timeOut"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClient.GetAsync(System.String)">
            <summary>
            Non blocking get message
            </summary>
            <param name="queueName"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageQueueClient.WaitForNotifyOnAny(System.String[])">
            <summary>
            Blocking wait for notifications on any of the supplied channels
            </summary>
            <param name="channelNames"></param>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageService">
            <summary>
            Simple definition of an MQ Host
            </summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.RegisterHandler``1(System.Func{NServiceKit.Messaging.IMessage{``0},System.Object})">
            <summary>
            Register DTOs and hanlders the MQ Host will process
            </summary>
            <typeparam name="T"></typeparam>
            <param name="processMessageFn"></param>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.RegisterHandler``1(System.Func{NServiceKit.Messaging.IMessage{``0},System.Object},System.Action{NServiceKit.Messaging.IMessage{``0},System.Exception})">
            <summary>
            Register DTOs and hanlders the MQ Host will process
            </summary>
            <typeparam name="T"></typeparam>
            <param name="processMessageFn"></param>
            <param name="processExceptionEx"></param>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.GetStats">
            <summary>
            Get Total Current Stats for all Message Handlers
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.GetStatus">
            <summary>
            Get the status of the service. Potential Statuses: Disposed, Stopped, Stopping, Starting, Started
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.GetStatsDescription">
            <summary>
            Get a Stats dump
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.Start">
            <summary>
            Start the MQ Host if not already started.
            </summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageService.Stop">
            <summary>
            Stop the MQ Host if not already stopped. 
            </summary>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageService.MessageFactory">
            <summary>
            Factory to create consumers and producers that work with this service
            </summary>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageService.RegisteredTypes">
            <summary>
            Get a list of all message types registered on this MQ Host
            </summary>
        </member>
        <member name="T:NServiceKit.Messaging.MessageError">
            <summary>
            An Error Message Type that can be easily serialized
            </summary>
        </member>
        <member name="P:NServiceKit.Messaging.MessageError.ErrorCode">
             <summary>Gets or sets the error code.</summary>
            
             <value>The error code.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageError.Message">
             <summary>Gets or sets the message.</summary>
            
             <value>The message.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageError.StackTrace">
             <summary>Gets or sets the stack trace.</summary>
            
             <value>The stack trace.</value>
        </member>
        <member name="T:NServiceKit.Messaging.MessageFactory">
            <summary>A message factory.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.MessageFactory.Create(System.Object)">
             <summary>Creates a new IMessage.</summary>
            
             <param name="response">The response.</param>
            
             <returns>An IMessage.</returns>
        </member>
        <member name="T:NServiceKit.Messaging.Message">
            <summary>A message.</summary>
        </member>
        <member name="P:NServiceKit.Messaging.Message.Id">
             <summary>Gets or sets the identifier.</summary>
            
             <value>The identifier.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.CreatedDate">
             <summary>Gets or sets the created date.</summary>
            
             <value>The created date.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.Priority">
             <summary>Gets or sets the priority.</summary>
            
             <value>The priority.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.RetryAttempts">
             <summary>Gets or sets the retry attempts.</summary>
            
             <value>The retry attempts.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.ReplyId">
             <summary>Gets or sets the identifier of the reply.</summary>
            
             <value>The identifier of the reply.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.ReplyTo">
             <summary>Gets or sets the reply to.</summary>
            
             <value>The reply to.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.Options">
             <summary>Gets or sets options for controlling the operation.</summary>
            
             <value>The options.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.Error">
             <summary>Gets or sets the error.</summary>
            
             <value>The error.</value>
        </member>
        <member name="P:NServiceKit.Messaging.Message.Body">
             <summary>Gets or sets the body.</summary>
            
             <value>The body.</value>
        </member>
        <member name="T:NServiceKit.Messaging.Message`1">
            <summary>
            Basic implementation of IMessage[T]
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.Messaging.Message`1.#ctor">
            <summary>Initializes a new instance of the NServiceKit.Messaging.Message&lt;T&gt; class.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.Message`1.#ctor(`0)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.Message&lt;T&gt; class.</summary>
            
             <param name="body">The body.</param>
        </member>
        <member name="M:NServiceKit.Messaging.Message`1.Create(System.Object)">
             <summary>Creates a new IMessage.</summary>
            
             <param name="oBody">The body.</param>
            
             <returns>An IMessage.</returns>
        </member>
        <member name="M:NServiceKit.Messaging.Message`1.GetBody">
             <summary>Gets the body.</summary>
            
             <returns>The body.</returns>
        </member>
        <member name="M:NServiceKit.Messaging.Message`1.ToString">
             <summary>Returns a string that represents the current object.</summary>
            
             <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:NServiceKit.Messaging.IMessageHandlerStats">
            <summary>Interface for message handler statistics.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.IMessageHandlerStats.Add(NServiceKit.Messaging.IMessageHandlerStats)">
             <summary>Adds stats.</summary>
            
             <param name="stats">The statistics to add.</param>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.Name">
             <summary>Gets the name.</summary>
            
             <value>The name.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.TotalMessagesProcessed">
             <summary>Gets the total number of messages processed.</summary>
            
             <value>The total number of messages processed.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.TotalMessagesFailed">
             <summary>Gets the total number of messages failed.</summary>
            
             <value>The total number of messages failed.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.TotalRetries">
             <summary>Gets the total number of retries.</summary>
            
             <value>The total number of retries.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.TotalNormalMessagesReceived">
             <summary>Gets the total number of normal messages received.</summary>
            
             <value>The total number of normal messages received.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.TotalPriorityMessagesReceived">
             <summary>Gets the total number of priority messages received.</summary>
            
             <value>The total number of priority messages received.</value>
        </member>
        <member name="P:NServiceKit.Messaging.IMessageHandlerStats.LastMessageProcessed">
             <summary>Gets the Date/Time of the last message processed.</summary>
            
             <value>The last message processed.</value>
        </member>
        <member name="T:NServiceKit.Messaging.MessageHandlerStats">
            <summary>A message handler statistics.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.MessageHandlerStats.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.MessageHandlerStats class.</summary>
            
             <param name="name">The name.</param>
        </member>
        <member name="M:NServiceKit.Messaging.MessageHandlerStats.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.DateTime})">
             <summary>Initializes a new instance of the NServiceKit.Messaging.MessageHandlerStats class.</summary>
            
             <param name="name">                         The name.</param>
             <param name="totalMessagesProcessed">       The total number of messages processed.</param>
             <param name="totalMessagesFailed">          The total number of messages failed.</param>
             <param name="totalRetries">                 The total number of retries.</param>
             <param name="totalNormalMessagesReceived">  The total number of normal messages received.</param>
             <param name="totalPriorityMessagesReceived">The total number of priority messages received.</param>
             <param name="lastMessageProcessed">         The last message processed.</param>
        </member>
        <member name="M:NServiceKit.Messaging.MessageHandlerStats.Add(NServiceKit.Messaging.IMessageHandlerStats)">
             <summary>Adds stats.</summary>
            
             <param name="stats">The statistics to add.</param>
        </member>
        <member name="M:NServiceKit.Messaging.MessageHandlerStats.ToString">
             <summary>Returns a string that represents the current object.</summary>
            
             <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.Name">
             <summary>Gets the name.</summary>
            
             <value>The name.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.LastMessageProcessed">
             <summary>Gets the Date/Time of the last message processed.</summary>
            
             <value>The last message processed.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.TotalMessagesProcessed">
             <summary>Gets the total number of messages processed.</summary>
            
             <value>The total number of messages processed.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.TotalMessagesFailed">
             <summary>Gets the total number of messages failed.</summary>
            
             <value>The total number of messages failed.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.TotalRetries">
             <summary>Gets the total number of retries.</summary>
            
             <value>The total number of retries.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.TotalNormalMessagesReceived">
             <summary>Gets the total number of normal messages received.</summary>
            
             <value>The total number of normal messages received.</value>
        </member>
        <member name="P:NServiceKit.Messaging.MessageHandlerStats.TotalPriorityMessagesReceived">
             <summary>Gets the total number of priority messages received.</summary>
            
             <value>The total number of priority messages received.</value>
        </member>
        <member name="T:NServiceKit.Messaging.MessageOption">
            <summary>Bitfield of flags for specifying MessageOption.</summary>
        </member>
        <member name="F:NServiceKit.Messaging.MessageOption.None">
            <summary>A binary constant representing the none flag.</summary>
        </member>
        <member name="F:NServiceKit.Messaging.MessageOption.All">
            <summary>A binary constant representing all flag.</summary>
        </member>
        <member name="F:NServiceKit.Messaging.MessageOption.NotifyOneWay">
            <summary>A binary constant representing the notify one way flag.</summary>
        </member>
        <member name="T:NServiceKit.Messaging.MessagingException">
            <summary>
            Base Exception for all NServiceKit.Messaging exceptions
            </summary>
        </member>
        <member name="M:NServiceKit.Messaging.MessagingException.#ctor">
            <summary>Initializes a new instance of the NServiceKit.Messaging.MessagingException class.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.MessagingException.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.MessagingException class.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Messaging.MessagingException.#ctor(System.String,System.Exception)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.MessagingException class.</summary>
            
             <param name="message">       The message.</param>
             <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:NServiceKit.Messaging.MessagingException.ToMessageError">
             <summary>Converts this object to a message error.</summary>
            
             <returns>This object as a MessageError.</returns>
        </member>
        <member name="T:NServiceKit.Messaging.QueueNames`1">
            <summary>
            Util static generic class to create unique queue names for types
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.Priority">
             <summary>Gets the priority.</summary>
            
             <value>The priority.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.PriorityBytes">
             <summary>Gets the priority bytes.</summary>
            
             <value>The priority bytes.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.In">
             <summary>Gets the in.</summary>
            
             <value>The in.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.InBytes">
             <summary>Gets the in bytes.</summary>
            
             <value>The in bytes.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.Out">
             <summary>Gets the out.</summary>
            
             <value>The out.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.OutBytes">
             <summary>Gets the out bytes.</summary>
            
             <value>The out bytes.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.Dlq">
             <summary>Gets the dlq.</summary>
            
             <value>The dlq.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames`1.DlqBytes">
             <summary>Gets the dlq bytes.</summary>
            
             <value>The dlq bytes.</value>
        </member>
        <member name="T:NServiceKit.Messaging.QueueNames">
            <summary>
            Util class to create unique queue names for runtime types
            </summary>
        </member>
        <member name="F:NServiceKit.Messaging.QueueNames.TopicIn">
            <summary>The topic in.</summary>
        </member>
        <member name="F:NServiceKit.Messaging.QueueNames.TopicOut">
            <summary>The topic out.</summary>
        </member>
        <member name="F:NServiceKit.Messaging.QueueNames.QueuePrefix">
            <summary>The queue prefix.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.QueueNames.SetQueuePrefix(System.String)">
             <summary>Sets queue prefix.</summary>
            
             <param name="prefix">The prefix.</param>
        </member>
        <member name="M:NServiceKit.Messaging.QueueNames.#ctor(System.Type)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.QueueNames class.</summary>
            
             <param name="messageType">Type of the message.</param>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames.Priority">
             <summary>Gets the priority.</summary>
            
             <value>The priority.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames.In">
             <summary>Gets the in.</summary>
            
             <value>The in.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames.Out">
             <summary>Gets the out.</summary>
            
             <value>The out.</value>
        </member>
        <member name="P:NServiceKit.Messaging.QueueNames.Dlq">
             <summary>Gets the dlq.</summary>
            
             <value>The dlq.</value>
        </member>
        <member name="T:NServiceKit.Messaging.UnRetryableMessagingException">
            <summary>
            For messaging exceptions that should by-pass the messaging service's configured
            retry attempts and store the message straight into the DLQ
            </summary>
        </member>
        <member name="M:NServiceKit.Messaging.UnRetryableMessagingException.#ctor">
            <summary>Initializes a new instance of the NServiceKit.Messaging.UnRetryableMessagingException class.</summary>
        </member>
        <member name="M:NServiceKit.Messaging.UnRetryableMessagingException.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.UnRetryableMessagingException class.</summary>
            
             <param name="message">The message.</param>
        </member>
        <member name="M:NServiceKit.Messaging.UnRetryableMessagingException.#ctor(System.String,System.Exception)">
             <summary>Initializes a new instance of the NServiceKit.Messaging.UnRetryableMessagingException class.</summary>
            
             <param name="message">       The message.</param>
             <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisHash`2">
             <summary>Interface for redis hash.</summary>
            
             <typeparam name="TKey">  Type of the key.</typeparam>
             <typeparam name="TValue">Type of the value.</typeparam>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisHash`2.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisList`1">
            <summary>
            Wrap the common redis list operations under a IList[string] interface.
            </summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.GetRange(System.Int32,System.Int32)">
             <summary>Finds the range of the given arguments.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The calculated range.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.GetRangeFromSortedList(System.Int32,System.Int32)">
             <summary>Gets range from sorted list.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from sorted list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.RemoveAll">
            <summary>Removes all.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Trim(System.Int32,System.Int32)">
             <summary>Trims.</summary>
            
             <param name="keepStartingFrom">The keep starting from.</param>
             <param name="keepEndingAt">    The keep ending at.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.RemoveValue(`0)">
             <summary>Removes the value.</summary>
            
             <param name="value">The value to push.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.RemoveValue(`0,System.Int32)">
             <summary>Removes the value.</summary>
            
             <param name="value">      The value to push.</param>
             <param name="noOfMatches">The no of matches.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
             <summary>Adds a range.</summary>
            
             <param name="values">An IEnumerable&lt;T&gt; of items to append to this.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Append(`0)">
             <summary>Appends a value.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Prepend(`0)">
             <summary>Prepends a value.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.RemoveStart">
             <summary>Removes the start.</summary>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.BlockingRemoveStart(System.Nullable{System.TimeSpan})">
             <summary>Blocking remove start.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.RemoveEnd">
             <summary>Removes the end.</summary>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Enqueue(`0)">
             <summary>Adds an object onto the end of this queue.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Dequeue">
             <summary>Removes the head object from this queue.</summary>
            
             <returns>The head object from this queue.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.BlockingDequeue(System.Nullable{System.TimeSpan})">
             <summary>Blocking dequeue.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Push(`0)">
             <summary>Pushes an object onto this stack.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.Pop">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.BlockingPop(System.Nullable{System.TimeSpan})">
             <summary>Blocking pop.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisList`1.PopAndPush(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Pops the and push described by toList.</summary>
            
             <param name="toList">List of toes.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisSet`1">
             <summary>Interface for redis set.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.Sort(System.Int32,System.Int32)">
             <summary>Sorts.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The sorted values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.PopRandomItem">
             <summary>Pops the random item.</summary>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.GetRandomItem">
             <summary>Gets random item.</summary>
            
             <returns>The random item.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.MoveTo(`0,NServiceKit.Redis.Generic.IRedisSet{`0})">
             <summary>Move to.</summary>
            
             <param name="item"> The item.</param>
             <param name="toSet">Set to belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.PopulateWithIntersectOf(NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Populate with intersect of the given sets.</summary>
            
             <param name="sets">A variable-length parameters list containing sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.PopulateWithUnionOf(NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Populate with union of the given sets.</summary>
            
             <param name="sets">A variable-length parameters list containing sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.GetDifferences(NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Gets the differences.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSet`1.PopulateWithDifferencesOf(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Populate with differences of.</summary>
            
             <param name="fromSet"> Set from belongs to.</param>
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisSortedSet`1">
             <summary>Interface for redis sorted set.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.PopItemWithHighestScore">
             <summary>Pops the item with highest score.</summary>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.PopItemWithLowestScore">
             <summary>Pops the item with lowest score.</summary>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.IncrementItem(`0,System.Double)">
             <summary>Increment item.</summary>
            
             <param name="item">       The item.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.IndexOf(`0)">
             <summary>Index of the given item.</summary>
            
             <param name="item">The item.</param>
            
             <returns>An int.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.IndexOfDescending(`0)">
             <summary>Searches for the first descending.</summary>
            
             <param name="item">The item.</param>
            
             <returns>The zero-based index of the found descending, or -1 if no match was found.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetAllDescending">
             <summary>Gets all descending.</summary>
            
             <returns>all descending.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetRange(System.Int32,System.Int32)">
             <summary>Finds the range of the given arguments.</summary>
            
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The calculated range.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetRangeByLowestScore(System.Double,System.Double)">
             <summary>Gets range by lowest score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetRangeByLowestScore(System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range by lowest score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetRangeByHighestScore(System.Double,System.Double)">
             <summary>Gets range by highest score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetRangeByHighestScore(System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range by highest score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.RemoveRange(System.Int32,System.Int32)">
             <summary>Removes the range.</summary>
            
             <param name="minRank">The minimum rank.</param>
             <param name="maxRank">The maximum rank.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.RemoveRangeByScore(System.Double,System.Double)">
             <summary>Removes the range by score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.GetItemScore(`0)">
             <summary>Gets item score.</summary>
            
             <param name="item">The item.</param>
            
             <returns>The item score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.PopulateWithIntersectOf(NServiceKit.Redis.Generic.IRedisSortedSet{`0}[])">
             <summary>Populate with intersect of the given set identifiers.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisSortedSet`1.PopulateWithUnionOf(NServiceKit.Redis.Generic.IRedisSortedSet{`0}[])">
             <summary>Populate with union of the given set identifiers.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisTypedTransaction`1">
            <summary>
            Redis transaction for typed client
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1">
            <summary>
            interface to queueable operation using typed redis client
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Action{NServiceKit.Redis.Generic.IRedisTypedClient{`0}})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Action{NServiceKit.Redis.Generic.IRedisTypedClient{`0}},System.Action)">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Action{NServiceKit.Redis.Generic.IRedisTypedClient{`0}},System.Action,System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int32})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int32},System.Action{System.Int32})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int32},System.Action{System.Int32},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int64})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int64},System.Action{System.Int64})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Int64},System.Action{System.Int64},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Boolean})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Boolean},System.Action{System.Boolean})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Boolean},System.Action{System.Boolean},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Double})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Double},System.Action{System.Double})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Double},System.Action{System.Double},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Byte[]})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Byte[]},System.Action{System.Byte[]})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Byte[]},System.Action{System.Byte[]},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.String})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.String},System.Action{System.String})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.String},System.Action{System.String},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},`0})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},`0},System.Action{`0})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},`0},System.Action{`0},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{System.String}})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{System.String}},System.Action{System.Collections.Generic.List{System.String}})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{System.String}},System.Action{System.Collections.Generic.List{System.String}},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{`0}})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{`0}},System.Action{System.Collections.Generic.List{`0}})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedQueueableOperation`1.QueueCommand(System.Func{NServiceKit.Redis.Generic.IRedisTypedClient{`0},System.Collections.Generic.List{`0}},System.Action{System.Collections.Generic.List{`0}},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedTransaction`1.Commit">
             <summary>Commits this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedTransaction`1.Rollback">
            <summary>Rollbacks this object.</summary>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisTypedClient`1">
             <summary>Interface for redis typed client.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetHash``1(System.String)">
             <summary>Gets a hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>The hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.CreateTransaction">
             <summary>Creates the transaction.</summary>
            
             <returns>The new transaction.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.CreatePipeline">
             <summary>Creates the pipeline.</summary>
            
             <returns>The new pipeline.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AcquireLock">
             <summary>Acquires the lock described by timeOut.</summary>
            
             <returns>An IDisposable.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AcquireLock(System.TimeSpan)">
             <summary>Acquires the lock described by timeOut.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>An IDisposable.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllKeys">
             <summary>Gets all keys.</summary>
            
             <returns>all keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetSequence(System.Int32)">
             <summary>Sets a sequence.</summary>
            
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetNextSequence">
             <summary>Gets the next sequence.</summary>
            
             <returns>The next sequence.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetNextSequence(System.Int32)">
             <summary>Gets the next sequence.</summary>
            
             <param name="incrBy">Amount to increment by.</param>
            
             <returns>The next sequence.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetEntryType(System.String)">
             <summary>Gets entry type.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The entry type.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRandomKey">
             <summary>Gets random key.</summary>
            
             <returns>The random key.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetEntry(System.String,`0)">
             <summary>Sets an entry.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetEntry(System.String,`0,System.TimeSpan)">
             <summary>Sets an entry.</summary>
            
             <param name="key">     The key.</param>
             <param name="value">   The value.</param>
             <param name="expireIn">The expire in.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetEntryIfNotExists(System.String,`0)">
             <summary>Sets entry if not exists.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetValue(System.String)">
             <summary>Gets a value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The value.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAndSetValue(System.String,`0)">
             <summary>Gets and set value.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>The and set value.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.ContainsKey(System.String)">
             <summary>Query if 'key' contains key.</summary>
            
             <param name="key">The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveEntry(System.String)">
             <summary>Removes the entry described by entities.</summary>
            
             <param name="key">The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveEntry(System.String[])">
             <summary>Removes the entry described by entities.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveEntry(NServiceKit.DesignPatterns.Model.IHasStringId[])">
             <summary>Removes the entry described by entities.</summary>
            
             <param name="entities">A variable-length parameters list containing entities.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.IncrementValue(System.String)">
             <summary>Increment value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.IncrementValueBy(System.String,System.Int32)">
             <summary>Increment value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.DecrementValue(System.String)">
             <summary>Decrement value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.DecrementValueBy(System.String,System.Int32)">
             <summary>Decrement value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.ExpireIn(System.Object,System.TimeSpan)">
             <summary>Expire in.</summary>
            
             <param name="id">       The identifier.</param>
             <param name="expiresAt">The expires at.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.ExpireAt(System.Object,System.DateTime)">
             <summary>Expire at.</summary>
            
             <param name="id">      The identifier.</param>
             <param name="dateTime">The date time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.ExpireEntryIn(System.String,System.TimeSpan)">
             <summary>Expire entry in.</summary>
            
             <param name="key">      The key.</param>
             <param name="expiresAt">The expires at.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.ExpireEntryAt(System.String,System.DateTime)">
             <summary>Expire entry at.</summary>
            
             <param name="key">     The key.</param>
             <param name="dateTime">The date time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetTimeToLive(System.String)">
             <summary>Gets time to live.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The time to live.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.Save">
            <summary>Saves this object.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SaveAsync">
            <summary>Saves the asynchronous.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.FlushDb">
            <summary>Flushes the database.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.FlushAll">
            <summary>Flushes all.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SearchKeys(System.String)">
             <summary>Searches for the first keys.</summary>
            
             <param name="pattern">Specifies the pattern.</param>
            
             <returns>The found keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetValues(System.Collections.Generic.List{System.String})">
             <summary>Gets the values.</summary>
            
             <param name="keys">The keys.</param>
            
             <returns>The values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetSortedEntryValues(NServiceKit.Redis.Generic.IRedisSet{`0},System.Int32,System.Int32)">
             <summary>Gets sorted entry values.</summary>
            
             <param name="fromSet">     Set from belongs to.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The sorted entry values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreAsHash(`0)">
             <summary>Stores as hash.</summary>
            
             <param name="entity">The entity.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetFromHash(System.Object)">
             <summary>Gets from hash.</summary>
            
             <param name="id">The identifier.</param>
            
             <returns>The data that was read from the hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllItemsFromSet(NServiceKit.Redis.Generic.IRedisSet{`0})">
             <summary>Gets all items from set.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
            
             <returns>all items from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AddItemToSet(NServiceKit.Redis.Generic.IRedisSet{`0},`0)">
             <summary>Adds an item to set to 'item'.</summary>
            
             <param name="toSet">Set to belongs to.</param>
             <param name="item"> The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveItemFromSet(NServiceKit.Redis.Generic.IRedisSet{`0},`0)">
             <summary>Removes the item from set.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
             <param name="item">   The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PopItemFromSet(NServiceKit.Redis.Generic.IRedisSet{`0})">
             <summary>Pops the item from set described by fromSet.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.MoveBetweenSets(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0},`0)">
             <summary>Move between sets.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
             <param name="toSet">  Set to belongs to.</param>
             <param name="item">   The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetSetCount(NServiceKit.Redis.Generic.IRedisSet{`0})">
             <summary>Gets set count.</summary>
            
             <param name="set">The set.</param>
            
             <returns>The set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetContainsItem(NServiceKit.Redis.Generic.IRedisSet{`0},`0)">
             <summary>Sets contains item.</summary>
            
             <param name="set"> The set.</param>
             <param name="item">The item.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetIntersectFromSets(NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Gets intersect from sets.</summary>
            
             <param name="sets">A variable-length parameters list containing sets.</param>
            
             <returns>The intersect from sets.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreIntersectFromSets(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Stores intersect from sets.</summary>
            
             <param name="intoSet">Set the into belongs to.</param>
             <param name="sets">   A variable-length parameters list containing sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetUnionFromSets(NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Gets union from sets.</summary>
            
             <param name="sets">A variable-length parameters list containing sets.</param>
            
             <returns>The union from sets.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreUnionFromSets(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Stores union from sets.</summary>
            
             <param name="intoSet">Set the into belongs to.</param>
             <param name="sets">   A variable-length parameters list containing sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetDifferencesFromSet(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Gets differences from set.</summary>
            
             <param name="fromSet"> Set from belongs to.</param>
             <param name="withSets">Sets the with belongs to.</param>
            
             <returns>The differences from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreDifferencesFromSet(NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0},NServiceKit.Redis.Generic.IRedisSet{`0}[])">
             <summary>Stores differences from set.</summary>
            
             <param name="intoSet"> Set the into belongs to.</param>
             <param name="fromSet"> Set from belongs to.</param>
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRandomItemFromSet(NServiceKit.Redis.Generic.IRedisSet{`0})">
             <summary>Gets random item from set.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
            
             <returns>The random item from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllItemsFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Gets all items from list.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>all items from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromList(NServiceKit.Redis.Generic.IRedisList{`0},System.Int32,System.Int32)">
             <summary>Gets range from list.</summary>
            
             <param name="fromList">    List of froms.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SortList(NServiceKit.Redis.Generic.IRedisList{`0},System.Int32,System.Int32)">
             <summary>Sort list.</summary>
            
             <param name="fromList">    List of froms.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The sorted list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AddItemToList(NServiceKit.Redis.Generic.IRedisList{`0},`0)">
             <summary>Adds an item to list to 'value'.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="value">   The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PrependItemToList(NServiceKit.Redis.Generic.IRedisList{`0},`0)">
             <summary>Prepends an item to list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="value">   The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveStartFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Removes the start from list described by fromList.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.BlockingRemoveStartFromList(NServiceKit.Redis.Generic.IRedisList{`0},System.Nullable{System.TimeSpan})">
             <summary>Blocking remove start from list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="timeOut"> The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveEndFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Removes the end from list described by fromList.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveAllFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Removes all from list described by fromList.</summary>
            
             <param name="fromList">List of froms.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.TrimList(NServiceKit.Redis.Generic.IRedisList{`0},System.Int32,System.Int32)">
             <summary>Trim list.</summary>
            
             <param name="fromList">        List of froms.</param>
             <param name="keepStartingFrom">The keep starting from.</param>
             <param name="keepEndingAt">    The keep ending at.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveItemFromList(NServiceKit.Redis.Generic.IRedisList{`0},`0)">
             <summary>Removes the item from list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="value">   The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveItemFromList(NServiceKit.Redis.Generic.IRedisList{`0},`0,System.Int32)">
             <summary>Removes the item from list.</summary>
            
             <param name="fromList">   List of froms.</param>
             <param name="value">      The value.</param>
             <param name="noOfMatches">The no of matches.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetListCount(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Gets list count.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>The list count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetItemFromList(NServiceKit.Redis.Generic.IRedisList{`0},System.Int32)">
             <summary>Gets item from list.</summary>
            
             <param name="fromList"> List of froms.</param>
             <param name="listIndex">Zero-based index of the list.</param>
            
             <returns>The item from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetItemInList(NServiceKit.Redis.Generic.IRedisList{`0},System.Int32,`0)">
             <summary>Sets item in list.</summary>
            
             <param name="toList">   List of toes.</param>
             <param name="listIndex">Zero-based index of the list.</param>
             <param name="value">    The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.InsertBeforeItemInList(NServiceKit.Redis.Generic.IRedisList{`0},`0,`0)">
             <summary>Inserts a before item in list.</summary>
            
             <param name="toList">List of toes.</param>
             <param name="pivot"> The pivot.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.InsertAfterItemInList(NServiceKit.Redis.Generic.IRedisList{`0},`0,`0)">
             <summary>Inserts an after item in list.</summary>
            
             <param name="toList">List of toes.</param>
             <param name="pivot"> The pivot.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.EnqueueItemOnList(NServiceKit.Redis.Generic.IRedisList{`0},`0)">
             <summary>Enqueue item on list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="item">    The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.DequeueItemFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Dequeue item from list.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.BlockingDequeueItemFromList(NServiceKit.Redis.Generic.IRedisList{`0},System.Nullable{System.TimeSpan})">
             <summary>Blocking dequeue item from list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="timeOut"> The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PushItemToList(NServiceKit.Redis.Generic.IRedisList{`0},`0)">
             <summary>Pushes an item to list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="item">    The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PopItemFromList(NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Pops the item from list described by fromList.</summary>
            
             <param name="fromList">List of froms.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.BlockingPopItemFromList(NServiceKit.Redis.Generic.IRedisList{`0},System.Nullable{System.TimeSpan})">
             <summary>Blocking pop item from list.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="timeOut"> The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PopAndPushItemBetweenLists(NServiceKit.Redis.Generic.IRedisList{`0},NServiceKit.Redis.Generic.IRedisList{`0})">
             <summary>Pops the and push item between lists.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="toList">  List of toes.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.BlockingPopAndPushItemBetweenLists(NServiceKit.Redis.Generic.IRedisList{`0},NServiceKit.Redis.Generic.IRedisList{`0},System.Nullable{System.TimeSpan})">
             <summary>Blocking pop and push item between lists.</summary>
            
             <param name="fromList">List of froms.</param>
             <param name="toList">  List of toes.</param>
             <param name="timeOut"> The time out.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AddItemToSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Adds an item to sorted set.</summary>
            
             <param name="toSet">Set to belongs to.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AddItemToSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0,System.Double)">
             <summary>Adds an item to sorted set.</summary>
            
             <param name="toSet">Set to belongs to.</param>
             <param name="value">The value.</param>
             <param name="score">The score.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveItemFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Removes the item from sorted set.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
             <param name="value">  The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PopItemWithLowestScoreFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Pops the item with lowest score from sorted set described by fromSet.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.PopItemWithHighestScoreFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Pops the item with highest score from sorted set described by fromSet.</summary>
            
             <param name="fromSet">Set from belongs to.</param>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SortedSetContainsItem(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Sorted set contains item.</summary>
            
             <param name="set">  The set.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.IncrementItemInSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0,System.Double)">
             <summary>Increment item in sorted set.</summary>
            
             <param name="set">        The set.</param>
             <param name="value">      The value.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetItemIndexInSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Gets item index in sorted set.</summary>
            
             <param name="set">  The set.</param>
             <param name="value">The value.</param>
            
             <returns>The item index in sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetItemIndexInSortedSetDesc(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Gets item index in sorted set description.</summary>
            
             <param name="set">  The set.</param>
             <param name="value">The value.</param>
            
             <returns>The item index in sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllItemsFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Gets all items from sorted set.</summary>
            
             <param name="set">The set.</param>
            
             <returns>all items from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllItemsFromSortedSetDesc(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Gets all items from sorted set description.</summary>
            
             <param name="set">The set.</param>
            
             <returns>all items from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Int32,System.Int32)">
             <summary>Gets range from sorted set.</summary>
            
             <param name="set">     The set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetDesc(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Int32,System.Int32)">
             <summary>Gets range from sorted set description.</summary>
            
             <param name="set">     The set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllWithScoresFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Gets all with scores from sorted set.</summary>
            
             <param name="set">The set.</param>
            
             <returns>all with scores from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Int32,System.Int32)">
             <summary>Gets range with scores from sorted set.</summary>
            
             <param name="set">     The set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range with scores from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetDesc(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Int32,System.Int32)">
             <summary>Gets range with scores from sorted set description.</summary>
            
             <param name="set">     The set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range with scores from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String)">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double)">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String)">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double)">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByLowestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String)">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double)">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String)">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="set">            The set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double)">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRangeWithScoresFromSortedSetByHighestScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveRangeFromSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Int32,System.Int32)">
             <summary>Removes the range from sorted set.</summary>
            
             <param name="set">    The set.</param>
             <param name="minRank">The minimum rank.</param>
             <param name="maxRank">The maximum rank.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveRangeFromSortedSetByScore(NServiceKit.Redis.Generic.IRedisSortedSet{`0},System.Double,System.Double)">
             <summary>Removes the range from sorted set by score.</summary>
            
             <param name="set">      The set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetSortedSetCount(NServiceKit.Redis.Generic.IRedisSortedSet{`0})">
             <summary>Gets sorted set count.</summary>
            
             <param name="set">The set.</param>
            
             <returns>The sorted set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetItemScoreInSortedSet(NServiceKit.Redis.Generic.IRedisSortedSet{`0},`0)">
             <summary>Gets item score in sorted set.</summary>
            
             <param name="set">  The set.</param>
             <param name="value">The value.</param>
            
             <returns>The item score in sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreIntersectFromSortedSets(NServiceKit.Redis.Generic.IRedisSortedSet{`0},NServiceKit.Redis.Generic.IRedisSortedSet{`0}[])">
             <summary>Stores intersect from sorted sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreUnionFromSortedSets(NServiceKit.Redis.Generic.IRedisSortedSet{`0},NServiceKit.Redis.Generic.IRedisSortedSet{`0}[])">
             <summary>Stores union from sorted sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.HashContainsEntry``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},``0)">
             <summary>Query if 'hash' hash contains entry.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
             <param name="key"> The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetEntryInHash``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},``0,`0)">
             <summary>Sets entry in hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash"> The hash.</param>
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetEntryInHashIfNotExists``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},``0,`0)">
             <summary>Sets entry in hash if not exists.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash"> The hash.</param>
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.SetRangeInHash``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,`0}})">
             <summary>Sets range in hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">         The hash.</param>
             <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetValueFromHash``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},``0)">
             <summary>Gets value from hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
             <param name="key"> The key.</param>
            
             <returns>The value from hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.RemoveEntryFromHash``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0},``0)">
             <summary>Removes the entry from hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
             <param name="key"> The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetHashCount``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0})">
             <summary>Gets hash count.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
            
             <returns>The hash count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetHashKeys``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0})">
             <summary>Gets hash keys.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
            
             <returns>The hash keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetHashValues``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0})">
             <summary>Gets hash values.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
            
             <returns>The hash values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetAllEntriesFromHash``1(NServiceKit.Redis.Generic.IRedisHash{``0,`0})">
             <summary>Gets all entries from hash.</summary>
            
             <typeparam name="TKey">Type of the key.</typeparam>
             <param name="hash">The hash.</param>
            
             <returns>all entries from hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreRelatedEntities``1(System.Object,System.Collections.Generic.List{``0})">
             <summary>Stores related entities.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
             <param name="children">A variable-length parameters list containing children.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.StoreRelatedEntities``1(System.Object,``0[])">
             <summary>Stores related entities.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
             <param name="children">A variable-length parameters list containing children.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.DeleteRelatedEntities``1(System.Object)">
             <summary>Deletes the related entities described by parentId.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.DeleteRelatedEntity``1(System.Object,System.Object)">
             <summary>Deletes the related entity.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
             <param name="childId"> Identifier for the child.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRelatedEntities``1(System.Object)">
             <summary>Gets related entities.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
            
             <returns>The related entities.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetRelatedEntitiesCount``1(System.Object)">
             <summary>Gets related entities count.</summary>
            
             <typeparam name="TChild">Type of the child.</typeparam>
             <param name="parentId">Identifier for the parent.</param>
            
             <returns>The related entities count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.AddToRecentsList(`0)">
             <summary>Adds to the recents list.</summary>
            
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetLatestFromRecentsList(System.Int32,System.Int32)">
             <summary>Gets latest from recents list.</summary>
            
             <param name="skip">The skip.</param>
             <param name="take">The take.</param>
            
             <returns>The latest from recents list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.Generic.IRedisTypedClient`1.GetEarliestFromRecentsList(System.Int32,System.Int32)">
             <summary>Gets earliest from recents list.</summary>
            
             <param name="skip">The skip.</param>
             <param name="take">The take.</param>
            
             <returns>The earliest from recents list.</returns>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.Lists">
             <summary>Gets or sets the lists.</summary>
            
             <value>The lists.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.Sets">
             <summary>Gets or sets the sets.</summary>
            
             <value>The sets.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.SortedSets">
             <summary>Gets or sets the sets the sorted belongs to.</summary>
            
             <value>The sorted sets.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.RedisClient">
             <summary>Gets the redis client.</summary>
            
             <value>The redis client.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.Db">
             <summary>Gets or sets the database.</summary>
            
             <value>The database.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.TypeIdsSet">
             <summary>Gets the set the type identifiers belongs to.</summary>
            
             <value>The type identifiers set.</value>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.Item(System.String)">
             <summary>Indexer to get or set items within this collection using array index syntax.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The indexed item.</returns>
        </member>
        <member name="P:NServiceKit.Redis.Generic.IRedisTypedClient`1.SequenceKey">
             <summary>Gets or sets the sequence key.</summary>
            
             <value>The sequence key.</value>
        </member>
        <member name="T:NServiceKit.Redis.Generic.IRedisTypedPipeline`1">
            <summary>
            Interface to redis typed pipeline
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.Pipeline.IRedisPipelineShared">
            <summary>
            Pipeline interface shared by typed and non-typed pipelines
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation">
            <summary>
            Interface to operations that allow queued commands to be completed
            </summary>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteVoidQueuedCommand(System.Action)">
             <summary>Complete void queued command.</summary>
            
             <param name="voidReadCommand">The void read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteIntQueuedCommand(System.Func{System.Int32})">
             <summary>Complete int queued command.</summary>
            
             <param name="intReadCommand">The int read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteLongQueuedCommand(System.Func{System.Int64})">
             <summary>Complete long queued command.</summary>
            
             <param name="longReadCommand">The long read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteBytesQueuedCommand(System.Func{System.Byte[]})">
             <summary>Complete bytes queued command.</summary>
            
             <param name="bytesReadCommand">The bytes read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteMultiBytesQueuedCommand(System.Func{System.Byte[][]})">
             <summary>Complete multi bytes queued command.</summary>
            
             <param name="multiBytesReadCommand">The multi bytes read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteStringQueuedCommand(System.Func{System.String})">
             <summary>Complete string queued command.</summary>
            
             <param name="stringReadCommand">The string read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteMultiStringQueuedCommand(System.Func{System.Collections.Generic.List{System.String}})">
             <summary>Complete multi string queued command.</summary>
            
             <param name="multiStringReadCommand">The multi string read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueCompletableOperation.CompleteDoubleQueuedCommand(System.Func{System.Double})">
             <summary>Complete double queued command.</summary>
            
             <param name="doubleReadCommand">The double read command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisPipelineShared.Flush">
            <summary>Flushes this object.</summary>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisPipelineShared.Replay">
             <summary>Replays this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisClient">
            <summary>Interface for redis client.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.Save">
            <summary>Saves this object.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SaveAsync">
            <summary>Saves the asynchronous.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.Shutdown">
            <summary>Shuts down this object and frees any resources it is using.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RewriteAppendOnlyFileAsync">
            <summary>Rewrite append only file asynchronous.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.FlushDb">
            <summary>Flushes the database.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ScanKeys(System.Int64@,System.String,System.Nullable{System.Int64})">
             <summary>scan keys.</summary>
            
             <param name="cursor">start cursor.</param>
             <param name="pattern">key pattern.</param>
             <param name="count">scan count.</param>
             <returns>keys</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllKeys">
             <summary>Gets all keys.</summary>
            
             <returns>all keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetEntry(System.String,System.String)">
             <summary>Sets an entry.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetEntry(System.String,System.String,System.TimeSpan)">
             <summary>Sets an entry.</summary>
            
             <param name="key">     The key.</param>
             <param name="value">   The value.</param>
             <param name="expireIn">The expire in.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetEntryIfNotExists(System.String,System.String)">
             <summary>Sets entry if not exists.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetAll(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
             <summary>Sets all.</summary>
            
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetAll(System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>Sets all.</summary>
            
             <param name="map">The map.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValue(System.String)">
             <summary>Gets a value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The value.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAndSetEntry(System.String,System.String)">
             <summary>Gets and set entry.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>The and set entry.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValues(System.Collections.Generic.List{System.String})">
             <summary>Gets the values.</summary>
            
             <param name="keys">The keys.</param>
            
             <returns>The values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValues``1(System.Collections.Generic.List{System.String})">
             <summary>Gets the values.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="keys">The keys.</param>
            
             <returns>The values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValuesMap(System.Collections.Generic.List{System.String})">
             <summary>Gets values map.</summary>
            
             <param name="keys">The keys.</param>
            
             <returns>The values map.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValuesMap``1(System.Collections.Generic.List{System.String})">
             <summary>Gets values map.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="keys">The keys.</param>
            
             <returns>The values map.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AppendToValue(System.String,System.String)">
             <summary>Appends to value.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RenameKey(System.String,System.String)">
             <summary>Rename key.</summary>
            
             <param name="fromName">Name of from.</param>
             <param name="toName">  Name of to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSubstring(System.String,System.Int32,System.Int32)">
             <summary>Gets a substring.</summary>
            
             <param name="key">      The key.</param>
             <param name="fromIndex">Zero-based index of from.</param>
             <param name="toIndex">  Zero-based index of to.</param>
            
             <returns>The substring.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetFromHash``1(System.Object)">
             <summary>Gets from hash.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="id">The identifier.</param>
            
             <returns>The data that was read from the hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreAsHash``1(``0)">
             <summary>Stores as hash.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
             <param name="entity">The entity.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreObject(System.Object)">
             <summary>Stores an object.</summary>
            
             <param name="entity">The entity.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ContainsKey(System.String)">
             <summary>Query if 'key' contains key.</summary>
            
             <param name="key">The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveEntry(System.String[])">
             <summary>Removes the entry described by args.</summary>
            
             <param name="args">The arguments.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValue(System.String)">
             <summary>Increment value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValueBy(System.String,System.Int32)">
             <summary>Increment value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValueBy(System.String,System.Int64)">
             <summary>Increment value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValueBy(System.String,System.Double)">
             <summary>Increment value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.DecrementValue(System.String)">
             <summary>Decrement value.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.DecrementValueBy(System.String,System.Int32)">
             <summary>Decrement value by.</summary>
            
             <param name="key">  The key.</param>
             <param name="count">Number of.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SearchKeys(System.String)">
             <summary>Searches for the first keys.</summary>
            
             <param name="pattern">Specifies the pattern.</param>
            
             <returns>The found keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetEntryType(System.String)">
             <summary>Gets entry type.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The entry type.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRandomKey">
             <summary>Gets random key.</summary>
            
             <returns>The random key.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExpireEntryIn(System.String,System.TimeSpan)">
             <summary>Expire entry in.</summary>
            
             <param name="key">     The key.</param>
             <param name="expireIn">The expire in.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExpireEntryAt(System.String,System.DateTime)">
             <summary>Expire entry at.</summary>
            
             <param name="key">     The key.</param>
             <param name="expireAt">The expire at Date/Time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetTimeToLive(System.String)">
             <summary>Gets time to live.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The time to live.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedEntryValues(System.String,System.Int32,System.Int32)">
             <summary>Gets sorted entry values.</summary>
            
             <param name="key">         The key.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The sorted entry values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.WriteAll``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>Writes all.</summary>
            
             <typeparam name="TEntity">Type of the entity.</typeparam>
             <param name="entities">The entities.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetTypedClient``1">
            <summary>
            Returns a high-level typed client API
            Shorter Alias is As&lt;T&gt;();
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.As``1">
            <summary>
            Returns a high-level typed client API
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.CreateTransaction">
             <summary>Creates the transaction.</summary>
            
             <returns>The new transaction.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.CreatePipeline">
             <summary>Creates the pipeline.</summary>
            
             <returns>The new pipeline.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AcquireLock(System.String)">
             <summary>Acquires the lock.</summary>
            
             <param name="key">The key.</param>
            
             <returns>An IDisposable.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AcquireLock(System.String,System.TimeSpan)">
             <summary>Acquires the lock.</summary>
            
             <param name="key">    The key.</param>
             <param name="timeOut">The time out.</param>
            
             <returns>An IDisposable.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.Watch(System.String[])">
             <summary>Watches the given keys.</summary>
            
             <param name="keys">The keys.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.UnWatch">
            <summary>Un watch.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.CreateSubscription">
             <summary>Creates the subscription.</summary>
            
             <returns>The new subscription.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PublishMessage(System.String,System.String)">
             <summary>Publish message.</summary>
            
             <param name="toChannel">to channel.</param>
             <param name="message">  The message.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllItemsFromSet(System.String)">
             <summary>Gets all items from set.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>all items from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddItemToSet(System.String,System.String)">
             <summary>Adds an item to set to 'item'.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="item"> The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddRangeToSet(System.String,System.Collections.Generic.List{System.String})">
             <summary>Adds a range to set to 'items'.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="items">The items.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveItemFromSet(System.String,System.String)">
             <summary>Removes the item from set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="item"> The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PopItemFromSet(System.String)">
             <summary>Pops the item from set described by setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.MoveBetweenSets(System.String,System.String,System.String)">
             <summary>Move between sets.</summary>
            
             <param name="fromSetId">Identifier for from set.</param>
             <param name="toSetId">  Identifier for to set.</param>
             <param name="item">     The item.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSetCount(System.String)">
             <summary>Gets set count.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>The set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetContainsItem(System.String,System.String)">
             <summary>Sets contains item.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="item"> The item.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetIntersectFromSets(System.String[])">
             <summary>Gets intersect from sets.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>The intersect from sets.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreIntersectFromSets(System.String,System.String[])">
             <summary>Stores intersect from sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetUnionFromSets(System.String[])">
             <summary>Gets union from sets.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>The union from sets.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreUnionFromSets(System.String,System.String[])">
             <summary>Stores union from sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetDifferencesFromSet(System.String,System.String[])">
             <summary>Gets differences from set.</summary>
            
             <param name="fromSetId"> Identifier for from set.</param>
             <param name="withSetIds">List of identifiers for the with sets.</param>
            
             <returns>The differences from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreDifferencesFromSet(System.String,System.String,System.String[])">
             <summary>Stores differences from set.</summary>
            
             <param name="intoSetId"> Identifier for the into set.</param>
             <param name="fromSetId"> Identifier for from set.</param>
             <param name="withSetIds">List of identifiers for the with sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRandomItemFromSet(System.String)">
             <summary>Gets random item from set.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>The random item from set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllItemsFromList(System.String)">
             <summary>Gets all items from list.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>all items from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromList(System.String,System.Int32,System.Int32)">
             <summary>Gets range from list.</summary>
            
             <param name="listId">      Identifier for the list.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedList(System.String,System.Int32,System.Int32)">
             <summary>Gets range from sorted list.</summary>
            
             <param name="listId">      Identifier for the list.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from sorted list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedItemsFromList(System.String,NServiceKit.Redis.SortOptions)">
             <summary>Gets sorted items from list.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="sortOptions">Options for controlling the sort.</param>
            
             <returns>The sorted items from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddItemToList(System.String,System.String)">
             <summary>Adds an item to list to 'value'.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddRangeToList(System.String,System.Collections.Generic.List{System.String})">
             <summary>Adds a range to list to 'values'.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PrependItemToList(System.String,System.String)">
             <summary>Prepends an item to list.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PrependRangeToList(System.String,System.Collections.Generic.List{System.String})">
             <summary>Prepends a range to list.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveAllFromList(System.String)">
             <summary>Removes all from list described by listId.</summary>
            
             <param name="listId">Identifier for the list.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveStartFromList(System.String)">
             <summary>Removes the start from list described by listId.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingRemoveStartFromList(System.String,System.Nullable{System.TimeSpan})">
             <summary>Blocking remove start from list.</summary>
            
             <param name="listId"> Identifier for the list.</param>
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingRemoveStartFromLists(System.String[],System.Nullable{System.TimeSpan})">
             <summary>Blocking remove start from lists.</summary>
            
             <param name="listIds">List of identifiers for the ]lists.</param>
             <param name="timeOut">  The time out.</param>
            
             <returns>An ItemRef.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveEndFromList(System.String)">
             <summary>Removes the end from list described by listId.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.TrimList(System.String,System.Int32,System.Int32)">
             <summary>Trim list.</summary>
            
             <param name="listId">          Identifier for the list.</param>
             <param name="keepStartingFrom">The keep starting from.</param>
             <param name="keepEndingAt">    The keep ending at.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveItemFromList(System.String,System.String)">
             <summary>Removes the item from list.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveItemFromList(System.String,System.String,System.Int32)">
             <summary>Removes the item from list.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="value">      The value.</param>
             <param name="noOfMatches">The no of matches.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetListCount(System.String)">
             <summary>Gets list count.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>The list count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetItemFromList(System.String,System.Int32)">
             <summary>Gets item from list.</summary>
            
             <param name="listId">   Identifier for the list.</param>
             <param name="listIndex">Zero-based index of the list.</param>
            
             <returns>The item from list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetItemInList(System.String,System.Int32,System.String)">
             <summary>Sets item in list.</summary>
            
             <param name="listId">   Identifier for the list.</param>
             <param name="listIndex">Zero-based index of the list.</param>
             <param name="value">    The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.EnqueueItemOnList(System.String,System.String)">
             <summary>Enqueue item on list.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.DequeueItemFromList(System.String)">
             <summary>Dequeue item from list.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingDequeueItemFromList(System.String,System.Nullable{System.TimeSpan})">
             <summary>Blocking dequeue item from list.</summary>
            
             <param name="listId"> Identifier for the list.</param>
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingDequeueItemFromLists(System.String[],System.Nullable{System.TimeSpan})">
             <summary>Blocking dequeue item from lists.</summary>
            
             <param name="listIds">List of identifiers for the ]lists.</param>
             <param name="timeOut">  The time out.</param>
            
             <returns>An ItemRef.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PushItemToList(System.String,System.String)">
             <summary>Pushes an item to list.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PopItemFromList(System.String)">
             <summary>Pops the item from list described by listId.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingPopItemFromList(System.String,System.Nullable{System.TimeSpan})">
             <summary>Blocking pop item from list.</summary>
            
             <param name="listId"> Identifier for the list.</param>
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingPopItemFromLists(System.String[],System.Nullable{System.TimeSpan})">
             <summary>Blocking pop item from lists.</summary>
            
             <param name="listIds">List of identifiers for the ]lists.</param>
             <param name="timeOut">  The time out.</param>
            
             <returns>An ItemRef.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PopAndPushItemBetweenLists(System.String,System.String)">
             <summary>Pops the and push item between lists.</summary>
            
             <param name="fromListId">Identifier for from list.</param>
             <param name="toListId">  Identifier for to list.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.BlockingPopAndPushItemBetweenLists(System.String,System.String,System.Nullable{System.TimeSpan})">
             <summary>Blocking pop and push item between lists.</summary>
            
             <param name="fromListId">Identifier for from list.</param>
             <param name="toListId">  Identifier for to list.</param>
             <param name="timeOut">   The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddItemToSortedSet(System.String,System.String)">
             <summary>Adds an item to sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddItemToSortedSet(System.String,System.String,System.Double)">
             <summary>Adds an item to sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
             <param name="score">The score.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddRangeToSortedSet(System.String,System.Collections.Generic.List{System.String},System.Double)">
             <summary>Adds a range to sorted set.</summary>
            
             <param name="setId"> Identifier for the set.</param>
             <param name="values">The values.</param>
             <param name="score"> The score.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.AddRangeToSortedSet(System.String,System.Collections.Generic.List{System.String},System.Int64)">
             <summary>Adds a range to sorted set.</summary>
            
             <param name="setId"> Identifier for the set.</param>
             <param name="values">The values.</param>
             <param name="score"> The score.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveItemFromSortedSet(System.String,System.String)">
             <summary>Removes the item from sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PopItemWithLowestScoreFromSortedSet(System.String)">
             <summary>Pops the item with lowest score from sorted set described by setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.PopItemWithHighestScoreFromSortedSet(System.String)">
             <summary>Pops the item with highest score from sorted set described by setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SortedSetContainsItem(System.String,System.String)">
             <summary>Sorted set contains item.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementItemInSortedSet(System.String,System.String,System.Double)">
             <summary>Increment item in sorted set.</summary>
            
             <param name="setId">      Identifier for the set.</param>
             <param name="value">      The value.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementItemInSortedSet(System.String,System.String,System.Int64)">
             <summary>Increment item in sorted set.</summary>
            
             <param name="setId">      Identifier for the set.</param>
             <param name="value">      The value.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetItemIndexInSortedSet(System.String,System.String)">
             <summary>Gets item index in sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>The item index in sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetItemIndexInSortedSetDesc(System.String,System.String)">
             <summary>Gets item index in sorted set description.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>The item index in sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllItemsFromSortedSet(System.String)">
             <summary>Gets all items from sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>all items from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllItemsFromSortedSetDesc(System.String)">
             <summary>Gets all items from sorted set description.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>all items from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSet(System.String,System.Int32,System.Int32)">
             <summary>Gets range from sorted set.</summary>
            
             <param name="setId">   Identifier for the set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetDesc(System.String,System.Int32,System.Int32)">
             <summary>Gets range from sorted set description.</summary>
            
             <param name="setId">   Identifier for the set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllWithScoresFromSortedSet(System.String)">
             <summary>Gets all with scores from sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>all with scores from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSet(System.String,System.Int32,System.Int32)">
             <summary>Gets range with scores from sorted set.</summary>
            
             <param name="setId">   Identifier for the set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range with scores from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetDesc(System.String,System.Int32,System.Int32)">
             <summary>Gets range with scores from sorted set description.</summary>
            
             <param name="setId">   Identifier for the set.</param>
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
            
             <returns>The range with scores from sorted set description.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.String,System.String)">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.Double,System.Double)">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.Int64,System.Int64)">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByLowestScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.String,System.String)">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.Double,System.Double)">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.Int64,System.Int64)">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByLowestScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by lowest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by lowest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.String,System.String)">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.Double,System.Double)">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.Int64,System.Int64)">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeFromSortedSetByHighestScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.String,System.String)">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.Double,System.Double)">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.Int64,System.Int64)">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetRangeWithScoresFromSortedSetByHighestScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range with scores from sorted set by highest score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range with scores from sorted set by highest score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveRangeFromSortedSet(System.String,System.Int32,System.Int32)">
             <summary>Removes the range from sorted set.</summary>
            
             <param name="setId">  Identifier for the set.</param>
             <param name="minRank">The minimum rank.</param>
             <param name="maxRank">The maximum rank.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveRangeFromSortedSetByScore(System.String,System.Double,System.Double)">
             <summary>Removes the range from sorted set by score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveRangeFromSortedSetByScore(System.String,System.Int64,System.Int64)">
             <summary>Removes the range from sorted set by score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedSetCount(System.String)">
             <summary>Gets sorted set count.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>The sorted set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedSetCount(System.String,System.String,System.String)">
             <summary>Gets sorted set count.</summary>
            
             <param name="setId">          Identifier for the set.</param>
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The sorted set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedSetCount(System.String,System.Int64,System.Int64)">
             <summary>Gets sorted set count.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The sorted set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetSortedSetCount(System.String,System.Double,System.Double)">
             <summary>Gets sorted set count.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The sorted set count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetItemScoreInSortedSet(System.String,System.String)">
             <summary>Gets item score in sorted set.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>The item score in sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreIntersectFromSortedSets(System.String,System.String[])">
             <summary>Stores intersect from sorted sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.StoreUnionFromSortedSets(System.String,System.String[])">
             <summary>Stores union from sorted sets.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.HashContainsEntry(System.String,System.String)">
             <summary>Query if 'hashId' hash contains entry.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetEntryInHash(System.String,System.String,System.String)">
             <summary>Sets entry in hash.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
             <param name="value"> The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetEntryInHashIfNotExists(System.String,System.String,System.String)">
             <summary>Sets entry in hash if not exists.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
             <param name="value"> The value.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.SetRangeInHash(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
             <summary>Sets range in hash.</summary>
            
             <param name="hashId">       Identifier for the hash.</param>
             <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValueInHash(System.String,System.String,System.Int32)">
             <summary>Increment value in hash.</summary>
            
             <param name="hashId">     Identifier for the hash.</param>
             <param name="key">        The key.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.IncrementValueInHash(System.String,System.String,System.Double)">
             <summary>Increment value in hash.</summary>
            
             <param name="hashId">     Identifier for the hash.</param>
             <param name="key">        The key.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValueFromHash(System.String,System.String)">
             <summary>Gets value from hash.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>The value from hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetValuesFromHash(System.String,System.String[])">
             <summary>Gets values from hash.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="keys">  The keys.</param>
            
             <returns>The values from hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveEntryFromHash(System.String,System.String)">
             <summary>Removes the entry from hash.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetHashCount(System.String)">
             <summary>Gets hash count.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>The hash count.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetHashKeys(System.String)">
             <summary>Gets hash keys.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>The hash keys.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetHashValues(System.String)">
             <summary>Gets hash values.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>The hash values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.GetAllEntriesFromHash(System.String)">
             <summary>Gets all entries from hash.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>all entries from hash.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsString(System.String,System.String[])">
             <summary>Executes the lua as string operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsString(System.String,System.String[],System.String[])">
             <summary>Executes the lua as string operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="keys">   The keys.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsString(System.String,System.String[])">
             <summary>Executes the lua sha as string operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="args">The arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsString(System.String,System.String[],System.String[])">
             <summary>Executes the lua sha as string operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="keys">The keys.</param>
             <param name="args">The arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsInt(System.String,System.String[])">
             <summary>Executes the lua as int operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsInt(System.String,System.String[],System.String[])">
             <summary>Executes the lua as int operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="keys">   The keys.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsInt(System.String,System.String[])">
             <summary>Executes the lua sha as int operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="args">The arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsInt(System.String,System.String[],System.String[])">
             <summary>Executes the lua sha as int operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="keys">The keys.</param>
             <param name="args">The arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsList(System.String,System.String[])">
             <summary>Executes the lua as list operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A List&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaAsList(System.String,System.String[],System.String[])">
             <summary>Executes the lua as list operation.</summary>
            
             <param name="luaBody">The lua body.</param>
             <param name="keys">   The keys.</param>
             <param name="args">   The arguments.</param>
            
             <returns>A List&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsList(System.String,System.String[])">
             <summary>Executes the lua sha as list operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="args">The arguments.</param>
            
             <returns>A List&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.ExecLuaShaAsList(System.String,System.String[],System.String[])">
             <summary>Executes the lua sha as list operation.</summary>
            
             <param name="sha1">The first sha.</param>
             <param name="keys">The keys.</param>
             <param name="args">The arguments.</param>
            
             <returns>A List&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.CalculateSha1(System.String)">
             <summary>Calculates the sha 1.</summary>
            
             <param name="luaBody">The lua body.</param>
            
             <returns>The calculated sha 1.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.HasLuaScript(System.String)">
             <summary>Query if 'sha1Ref' has lua script.</summary>
            
             <param name="sha1Ref">The sha 1 reference.</param>
            
             <returns>true if lua script, false if not.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.WhichLuaScriptsExists(System.String[])">
             <summary>Queries if a given which lua scripts exists.</summary>
            
             <param name="sha1Refs">A variable-length parameters list containing sha 1 references.</param>
            
             <returns>A Dictionary&lt;string,bool&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.RemoveAllLuaScripts">
            <summary>Removes all lua scripts.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.KillRunningLuaScript">
            <summary>Kill running lua script.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClient.LoadLuaScript(System.String)">
             <summary>Loads lua script.</summary>
            
             <param name="body">The body.</param>
            
             <returns>The lua script.</returns>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Db">
             <summary>Gets or sets the database.</summary>
            
             <value>The database.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.DbSize">
             <summary>Gets the size of the database.</summary>
            
             <value>The size of the database.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Info">
             <summary>Gets the information.</summary>
            
             <value>The information.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.LastSave">
             <summary>Gets the Date/Time of the last save.</summary>
            
             <value>The last save.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Host">
             <summary>Gets the host.</summary>
            
             <value>The host.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Port">
             <summary>Gets the port.</summary>
            
             <value>The port.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.ConnectTimeout">
             <summary>Gets or sets the connect timeout.</summary>
            
             <value>The connect timeout.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.RetryTimeout">
             <summary>Gets or sets the retry timeout.</summary>
            
             <value>The retry timeout.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.RetryCount">
             <summary>Gets or sets the number of retries.</summary>
            
             <value>The number of retries.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.SendTimeout">
             <summary>Gets or sets the send timeout.</summary>
            
             <value>The send timeout.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Password">
             <summary>Gets or sets the password.</summary>
            
             <value>The password.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.HadExceptions">
             <summary>Gets a value indicating whether the had exceptions.</summary>
            
             <value>true if had exceptions, false if not.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Item(System.String)">
             <summary>Indexer to get or set items within this collection using array index syntax.</summary>
            
             <param name="key">The key.</param>
            
             <returns>The indexed item.</returns>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Lists">
             <summary>Gets or sets the lists.</summary>
            
             <value>The lists.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Sets">
             <summary>Gets or sets the sets.</summary>
            
             <value>The sets.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.SortedSets">
             <summary>Gets or sets the sets the sorted belongs to.</summary>
            
             <value>The sorted sets.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisClient.Hashes">
             <summary>Gets or sets the hashes.</summary>
            
             <value>The hashes.</value>
        </member>
        <member name="T:NServiceKit.Redis.IRedisClientCacheManager">
            <summary>Interface for redis client cache manager.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientCacheManager.GetClient">
            <summary>
            Returns a Read/Write client (The default) using the hosts defined in ReadWriteHosts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientCacheManager.GetReadOnlyClient">
            <summary>
            Returns a ReadOnly client using the hosts defined in ReadOnlyHosts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientCacheManager.GetCacheClient">
            <summary>
            Returns a Read/Write ICacheClient (The default) using the hosts defined in ReadWriteHosts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientCacheManager.GetReadOnlyCacheClient">
            <summary>
            Returns a ReadOnly ICacheClient using the hosts defined in ReadOnlyHosts.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisClientsManager">
            <summary>Interface for redis clients manager.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientsManager.GetClient">
            <summary>
            Returns a Read/Write client (The default) using the hosts defined in ReadWriteHosts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientsManager.GetReadOnlyClient">
            <summary>
            Returns a ReadOnly client using the hosts defined in ReadOnlyHosts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientsManager.GetCacheClient">
            <summary>
            Returns a Read/Write ICacheClient (The default) using the hosts defined in ReadWriteHosts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisClientsManager.GetReadOnlyCacheClient">
            <summary>
            Returns a ReadOnly ICacheClient using the hosts defined in ReadOnlyHosts.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisHash">
            <summary>Interface for redis hash.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisHash.AddIfNotExists(System.Collections.Generic.KeyValuePair{System.String,System.String})">
             <summary>Adds if not exists.</summary>
            
             <param name="item">The item.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisHash.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
             <summary>Adds a range.</summary>
            
             <param name="items">An IEnumerable&lt;KeyValuePair&lt;string,string&gt;&gt; of items to append to this.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisHash.IncrementValue(System.String,System.Int32)">
             <summary>Increment value.</summary>
            
             <param name="key">        The key.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisList">
            <summary>Interface for redis list.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.GetRange(System.Int32,System.Int32)">
             <summary>Finds the range of the given arguments.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The calculated range.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.GetRangeFromSortedList(System.Int32,System.Int32)">
             <summary>Gets range from sorted list.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from sorted list.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.RemoveAll">
            <summary>Removes all.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Trim(System.Int32,System.Int32)">
             <summary>Trims.</summary>
            
             <param name="keepStartingFrom">The keep starting from.</param>
             <param name="keepEndingAt">    The keep ending at.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.RemoveValue(System.String)">
             <summary>Removes the value.</summary>
            
             <param name="value">The value to push.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.RemoveValue(System.String,System.Int32)">
             <summary>Removes the value.</summary>
            
             <param name="value">      The value to push.</param>
             <param name="noOfMatches">The no of matches.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Prepend(System.String)">
             <summary>Prepends a value.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Append(System.String)">
             <summary>Appends a value.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.RemoveStart">
             <summary>Removes the start.</summary>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.BlockingRemoveStart(System.Nullable{System.TimeSpan})">
             <summary>Blocking remove start.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.RemoveEnd">
             <summary>Removes the end.</summary>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Enqueue(System.String)">
             <summary>Adds an object onto the end of this queue.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Dequeue">
             <summary>Removes the head object from this queue.</summary>
            
             <returns>The head object from this queue.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.BlockingDequeue(System.Nullable{System.TimeSpan})">
             <summary>Blocking dequeue.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Push(System.String)">
             <summary>Pushes an object onto this stack.</summary>
            
             <param name="value">The value to push.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.Pop">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.BlockingPop(System.Nullable{System.TimeSpan})">
             <summary>Blocking pop.</summary>
            
             <param name="timeOut">The time out.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisList.PopAndPush(NServiceKit.Redis.IRedisList)">
             <summary>Pops the and push described by toList.</summary>
            
             <param name="toList">List of toes.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisNativeClient">
            <summary>Interface for redis native client.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Save">
            <summary>Saves this object.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BgSave">
            <summary>Background save.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Shutdown">
            <summary>Shuts down this object and frees any resources it is using.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BgRewriteAof">
            <summary>Background rewrite aof.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Quit">
            <summary>Quits this object.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.FlushDb">
            <summary>Flushes the database.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.FlushAll">
            <summary>Flushes all.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Ping">
             <summary>Pings this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Echo(System.String)">
             <summary>Echoes.</summary>
            
             <param name="text">The text.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SlaveOf(System.String,System.Int32)">
             <summary>Slave of.</summary>
            
             <param name="hostname">The hostname.</param>
             <param name="port">    The port.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SlaveOfNoOne">
            <summary>Slave of no one.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ConfigGet(System.String)">
             <summary>Configuration get.</summary>
            
             <param name="pattern">Specifies the pattern.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ConfigSet(System.String,System.Byte[])">
             <summary>Configuration set.</summary>
            
             <param name="item"> The item.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ConfigResetStat">
            <summary>Configuration reset stat.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Time">
             <summary>Gets the time.</summary>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.DebugSegfault">
            <summary>Debug segfault.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Dump(System.String)">
             <summary>Dumps.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Restore(System.String,System.Int64,System.Byte[])">
             <summary>Restores.</summary>
            
             <param name="key">      The key.</param>
             <param name="expireMs"> The expire in milliseconds.</param>
             <param name="dumpValue">The dump value.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Migrate(System.String,System.Int32,System.Int32,System.Int64)">
             <summary>Migrates.</summary>
            
             <param name="host">         The host.</param>
             <param name="port">         The port.</param>
             <param name="destinationDb">Destination database.</param>
             <param name="timeoutMs">    The timeout in milliseconds.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Move(System.String,System.Int32)">
             <summary>Moves.</summary>
            
             <param name="key">The key.</param>
             <param name="db"> The database.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ObjectIdleTime(System.String)">
             <summary>Object idle time.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Keys(System.String)">
             <summary>Keys.</summary>
            
             <param name="pattern">Specifies the pattern.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Exists(System.String)">
             <summary>Exists.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.StrLen(System.String)">
             <summary>String lens.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Set(System.String,System.Byte[])">
             <summary>Sets.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SetEx(System.String,System.Int32,System.Byte[])">
             <summary>Sets an ex.</summary>
            
             <param name="key">            The key.</param>
             <param name="expireInSeconds">The expire in seconds.</param>
             <param name="value">          The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Persist(System.String)">
             <summary>Persists.</summary>
            
             <param name="key">The key.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PSetEx(System.String,System.Int64,System.Byte[])">
             <summary>Sets an ex.</summary>
            
             <param name="key">       The key.</param>
             <param name="expireInMs">The expire in milliseconds.</param>
             <param name="value">     The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SetNX(System.String,System.Byte[])">
             <summary>Sets a nx.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MSet(System.Byte[][],System.Byte[][])">
             <summary>Sets.</summary>
            
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MSet(System.String[],System.Byte[][])">
             <summary>Sets.</summary>
            
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MSetNx(System.Byte[][],System.Byte[][])">
             <summary>Sets a nx.</summary>
            
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MSetNx(System.String[],System.Byte[][])">
             <summary>Sets a nx.</summary>
            
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Get(System.String)">
             <summary>Gets.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.GetSet(System.String,System.Byte[])">
             <summary>Gets a set.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>An array of byte.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MGet(System.Byte[][])">
             <summary>Gets the given keys.</summary>
            
             <param name="keysAndArgs">A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.MGet(System.String[])">
             <summary>Gets the given keys.</summary>
            
             <param name="keys">The keys.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Del(System.String)">
             <summary>Deletes the given keys.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Del(System.String[])">
             <summary>Deletes the given keys.</summary>
            
             <param name="keys">The keys.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Incr(System.String)">
             <summary>Incrs.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.IncrBy(System.String,System.Int32)">
             <summary>Increment by.</summary>
            
             <param name="key">   The key.</param>
             <param name="incrBy">Amount to increment by.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.IncrByFloat(System.String,System.Double)">
             <summary>Increment by float.</summary>
            
             <param name="key">   The key.</param>
             <param name="incrBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Decr(System.String)">
             <summary>Decrs.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.DecrBy(System.String,System.Int32)">
             <summary>Decrement by.</summary>
            
             <param name="key">   The key.</param>
             <param name="decrBy">Amount to decrement by.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Append(System.String,System.Byte[])">
             <summary>Appends a key.</summary>
            
             <param name="key">  The key.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Substr(System.String,System.Int32,System.Int32)">
             <summary>(This method is obsolete) substrs.</summary>
            
             <param name="key">      The key.</param>
             <param name="fromIndex">Zero-based index of from.</param>
             <param name="toIndex">  Zero-based index of to.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.GetRange(System.String,System.Int32,System.Int32)">
             <summary>Finds the range of the given arguments.</summary>
            
             <param name="key">      The key.</param>
             <param name="fromIndex">Zero-based index of from.</param>
             <param name="toIndex">  Zero-based index of to.</param>
            
             <returns>The calculated range.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SetRange(System.String,System.Int32,System.Byte[])">
             <summary>Sets a range.</summary>
            
             <param name="key">   The key.</param>
             <param name="offset">The offset.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.GetBit(System.String,System.Int32)">
             <summary>Gets a bit.</summary>
            
             <param name="key">   The key.</param>
             <param name="offset">The offset.</param>
            
             <returns>The bit.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SetBit(System.String,System.Int32,System.Int32)">
             <summary>Sets a bit.</summary>
            
             <param name="key">   The key.</param>
             <param name="offset">The offset.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RandomKey">
             <summary>Random key.</summary>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Rename(System.String,System.String)">
             <summary>Renames.</summary>
            
             <param name="oldKeyname">The old keyname.</param>
             <param name="newKeyname">The new keyname.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RenameNx(System.String,System.String)">
             <summary>Rename nx.</summary>
            
             <param name="oldKeyname">The old keyname.</param>
             <param name="newKeyname">The new keyname.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Expire(System.String,System.Int32)">
             <summary>Expires.</summary>
            
             <param name="key">    The key.</param>
             <param name="seconds">The seconds.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PExpire(System.String,System.Int64)">
             <summary>Expires.</summary>
            
             <param name="key">  The key.</param>
             <param name="ttlMs">The TTL in milliseconds.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ExpireAt(System.String,System.Int64)">
             <summary>Expire at.</summary>
            
             <param name="key">     The key.</param>
             <param name="unixTime">The unix time.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PExpireAt(System.String,System.Int64)">
             <summary>Expire at.</summary>
            
             <param name="key">       The key.</param>
             <param name="unixTimeMs">The unix time in milliseconds.</param>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Ttl(System.String)">
             <summary>Ttls.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PTtl(System.String)">
             <summary>Ttls.</summary>
            
             <param name="key">The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Sort(System.String,NServiceKit.Redis.SortOptions)">
             <summary>Sorts.</summary>
            
             <param name="listOrSetId">Identifier for the list or set.</param>
             <param name="sortOptions">Options for controlling the sort.</param>
            
             <returns>The sorted values.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LRange(System.String,System.Int32,System.Int32)">
             <summary>Ranges.</summary>
            
             <param name="listId">      Identifier for the list.</param>
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RPush(System.String,System.Byte[])">
             <summary>Pushes an object onto this stack.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RPushX(System.String,System.Byte[])">
             <summary>Pushes an x coordinate.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LPush(System.String,System.Byte[])">
             <summary>Pushes an object onto this stack.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LPushX(System.String,System.Byte[])">
             <summary>Pushes an x coordinate.</summary>
            
             <param name="listId">Identifier for the list.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LTrim(System.String,System.Int32,System.Int32)">
             <summary>Trims.</summary>
            
             <param name="listId">          Identifier for the list.</param>
             <param name="keepStartingFrom">The keep starting from.</param>
             <param name="keepEndingAt">    The keep ending at.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LRem(System.String,System.Int32,System.Byte[])">
             <summary>Rems.</summary>
            
             <param name="listId">           Identifier for the list.</param>
             <param name="removeNoOfMatches">The remove no of matches.</param>
             <param name="value">            The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LLen(System.String)">
             <summary>Lens.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LIndex(System.String,System.Int32)">
             <summary>Indexes.</summary>
            
             <param name="listId">   Identifier for the list.</param>
             <param name="listIndex">Zero-based index of the list.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LInsert(System.String,System.Boolean,System.Byte[],System.Byte[])">
             <summary>Inserts.</summary>
            
             <param name="listId">      Identifier for the list.</param>
             <param name="insertBefore">true to insert before.</param>
             <param name="pivot">       The pivot.</param>
             <param name="value">       The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LSet(System.String,System.Int32,System.Byte[])">
             <summary>Sets.</summary>
            
             <param name="listId">   Identifier for the list.</param>
             <param name="listIndex">Zero-based index of the list.</param>
             <param name="value">    The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.LPop(System.String)">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RPop(System.String)">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <param name="listId">Identifier for the list.</param>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BLPop(System.String,System.Int32)">
             <summary>Bl pop.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BLPop(System.String[],System.Int32)">
             <summary>Bl pop.</summary>
            
             <param name="listIds">    List of identifiers for the lists.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BLPopValue(System.String,System.Int32)">
             <summary>Bl pop value.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BLPopValue(System.String[],System.Int32)">
             <summary>Bl pop value.</summary>
            
             <param name="listIds">    List of identifiers for the lists.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BRPop(System.String,System.Int32)">
             <summary>Line break pop.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BRPop(System.String[],System.Int32)">
             <summary>Line break pop.</summary>
            
             <param name="listIds">    List of identifiers for the lists.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.RPopLPush(System.String,System.String)">
             <summary>Pops the l push.</summary>
            
             <param name="fromListId">Identifier for from list.</param>
             <param name="toListId">  Identifier for to list.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BRPopValue(System.String,System.Int32)">
             <summary>Line break pop value.</summary>
            
             <param name="listId">     Identifier for the list.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BRPopValue(System.String[],System.Int32)">
             <summary>Line break pop value.</summary>
            
             <param name="listIds">    List of identifiers for the lists.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.BRPopLPush(System.String,System.String,System.Int32)">
             <summary>Line break pop l push.</summary>
            
             <param name="fromListId"> Identifier for from list.</param>
             <param name="toListId">   Identifier for to list.</param>
             <param name="timeOutSecs">The time out in seconds.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SMembers(System.String)">
             <summary>Members.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SAdd(System.String,System.Byte[])">
             <summary>Adds setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SAdd(System.String,System.Byte[][])">
             <summary>Adds setId.</summary>
            
             <param name="setId"> Identifier for the set.</param>
             <param name="values">The values.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SRem(System.String,System.Byte[])">
             <summary>Rems.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SPop(System.String)">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SMove(System.String,System.String,System.Byte[])">
             <summary>Moves.</summary>
            
             <param name="fromSetId">Identifier for from set.</param>
             <param name="toSetId">  Identifier for to set.</param>
             <param name="value">    The value.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SCard(System.String)">
             <summary>Cards.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SIsMember(System.String,System.Byte[])">
             <summary>Is member.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SInter(System.String[])">
             <summary>Inters the given set identifiers.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SInterStore(System.String,System.String[])">
             <summary>Inter store.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SUnion(System.String[])">
             <summary>Unions the given set identifiers.</summary>
            
             <param name="setIds">List of identifiers for the sets.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SUnionStore(System.String,System.String[])">
             <summary>Union store.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SDiff(System.String,System.String[])">
             <summary>Compares two string objects to determine their relative ordering.</summary>
            
             <param name="fromSetId"> Identifier for from set.</param>
             <param name="withSetIds">List of identifiers for the with sets.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SDiffStore(System.String,System.String,System.String[])">
             <summary>Difference store.</summary>
            
             <param name="intoSetId"> Identifier for the into set.</param>
             <param name="fromSetId"> Identifier for from set.</param>
             <param name="withSetIds">List of identifiers for the with sets.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.SRandMember(System.String)">
             <summary>Random member.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZAdd(System.String,System.Double,System.Byte[])">
             <summary>Adds setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="score">The score.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZAdd(System.String,System.Int64,System.Byte[])">
             <summary>Adds setId.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="score">The score.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRem(System.String,System.Byte[])">
             <summary>Z coordinate rems.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZIncrBy(System.String,System.Double,System.Byte[])">
             <summary>Increment by.</summary>
            
             <param name="setId"> Identifier for the set.</param>
             <param name="incrBy">Amount to increment by.</param>
             <param name="value"> The value.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZIncrBy(System.String,System.Int64,System.Byte[])">
             <summary>Increment by.</summary>
            
             <param name="setId"> Identifier for the set.</param>
             <param name="incrBy">Amount to increment by.</param>
             <param name="value"> The value.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRank(System.String,System.Byte[])">
             <summary>Z coordinate ranks.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRank(System.String,System.Byte[])">
             <summary>Reverse rank.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRange(System.String,System.Int32,System.Int32)">
             <summary>Z coordinate ranges.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRangeWithScores(System.String,System.Int32,System.Int32)">
             <summary>Range with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRange(System.String,System.Int32,System.Int32)">
             <summary>Reverse range.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRangeWithScores(System.String,System.Int32,System.Int32)">
             <summary>Reverse range with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRangeByScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Range by score.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRangeByScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Range by score.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Range by score with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Range by score with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRangeByScore(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Reverse range by score.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRangeByScore(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Reverse range by score.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Reverse range by score with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRevRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Reverse range by score with scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
             <param name="skip"> The skip.</param>
             <param name="take"> The take.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRemRangeByRank(System.String,System.Int32,System.Int32)">
             <summary>Rem range by rank.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="min">  The minimum.</param>
             <param name="max">  The maximum.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRemRangeByScore(System.String,System.Double,System.Double)">
             <summary>Rem range by score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZRemRangeByScore(System.String,System.Int64,System.Int64)">
             <summary>Rem range by score.</summary>
            
             <param name="setId">    Identifier for the set.</param>
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZCard(System.String)">
             <summary>Z coordinate cards.</summary>
            
             <param name="setId">Identifier for the set.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZScore(System.String,System.Byte[])">
             <summary>Z coordinate scores.</summary>
            
             <param name="setId">Identifier for the set.</param>
             <param name="value">The value.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZUnionStore(System.String,System.String[])">
             <summary>Union store.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ZInterStore(System.String,System.String[])">
             <summary>Inter store.</summary>
            
             <param name="intoSetId">Identifier for the into set.</param>
             <param name="setIds">   List of identifiers for the sets.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HSet(System.String,System.Byte[],System.Byte[])">
             <summary>Sets.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HMSet(System.String,System.Byte[][],System.Byte[][])">
             <summary>Hm set.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="keys">  The keys.</param>
             <param name="values">The values.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HSetNX(System.String,System.Byte[],System.Byte[])">
             <summary>Sets a nx.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
             <param name="value"> The value.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HIncrby(System.String,System.Byte[],System.Int32)">
             <summary>Incrbies.</summary>
            
             <param name="hashId">     Identifier for the hash.</param>
             <param name="key">        The key.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HIncrbyFloat(System.String,System.Byte[],System.Double)">
             <summary>Incrby float.</summary>
            
             <param name="hashId">     Identifier for the hash.</param>
             <param name="key">        The key.</param>
             <param name="incrementBy">Amount to increment by.</param>
            
             <returns>A double.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HGet(System.String,System.Byte[])">
             <summary>Gets.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HMGet(System.String,System.Byte[][])">
             <summary>Hm get.</summary>
            
             <param name="hashId">     Identifier for the hash.</param>
             <param name="keysAndArgs">A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HDel(System.String,System.Byte[])">
             <summary>Deletes this object.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HExists(System.String,System.Byte[])">
             <summary>Exists.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
             <param name="key">   The key.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HLen(System.String)">
             <summary>Lens.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HKeys(System.String)">
             <summary>Keys.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HVals(System.String)">
             <summary>Vals.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.HGetAll(System.String)">
             <summary>Gets all.</summary>
            
             <param name="hashId">Identifier for the hash.</param>
            
             <returns>An array of byte[].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Watch(System.String[])">
             <summary>Watches the given keys.</summary>
            
             <param name="keys">The keys.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.UnWatch">
            <summary>Un watch.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Publish(System.String,System.Byte[])">
             <summary>Publishes.</summary>
            
             <param name="toChannel">to channel.</param>
             <param name="message">  The message.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Subscribe(System.String[])">
             <summary>Subscribes the given to channels.</summary>
            
             <param name="toChannels">A variable-length parameters list containing to channels.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.UnSubscribe(System.String[])">
             <summary>Un subscribe.</summary>
            
             <param name="toChannels">A variable-length parameters list containing to channels.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PSubscribe(System.String[])">
             <summary>Subscribes the given to channels matching patterns.</summary>
            
             <param name="toChannelsMatchingPatterns">A variable-length parameters list containing to channels matching patterns.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.PUnSubscribe(System.String[])">
             <summary>Un subscribe.</summary>
            
             <param name="toChannelsMatchingPatterns">A variable-length parameters list containing to channels matching patterns.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ReceiveMessages">
             <summary>Receive messages.</summary>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.EvalInt(System.String,System.Int32,System.Byte[][])">
             <summary>Redis LUA support.</summary>
            
             <param name="luaBody">     The lua body.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.EvalShaInt(System.String,System.Int32,System.Byte[][])">
             <summary>Eval sha int.</summary>
            
             <param name="sha1">        The first sha.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A long.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.EvalStr(System.String,System.Int32,System.Byte[][])">
             <summary>Eval string.</summary>
            
             <param name="luaBody">     The lua body.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.EvalShaStr(System.String,System.Int32,System.Byte[][])">
             <summary>Eval sha string.</summary>
            
             <param name="sha1">        The first sha.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.Eval(System.String,System.Int32,System.Byte[][])">
             <summary>Evals.</summary>
            
             <param name="luaBody">     The lua body.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.EvalSha(System.String,System.Int32,System.Byte[][])">
             <summary>Eval sha.</summary>
            
             <param name="sha1">        The first sha.</param>
             <param name="numberOfKeys">Number of keys.</param>
             <param name="keysAndArgs"> A variable-length parameters list containing keys and arguments.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.CalculateSha1(System.String)">
             <summary>Calculates the sha 1.</summary>
            
             <param name="luaBody">The lua body.</param>
            
             <returns>The calculated sha 1.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ScriptExists(System.Byte[][])">
             <summary>Queries if a given script exists.</summary>
            
             <param name="sha1Refs">A variable-length parameters list containing sha 1 references.</param>
            
             <returns>A byte[][].</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ScriptFlush">
            <summary>Script flush.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ScriptKill">
            <summary>Script kill.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisNativeClient.ScriptLoad(System.String)">
             <summary>Script load.</summary>
            
             <param name="body">The body.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="P:NServiceKit.Redis.IRedisNativeClient.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.IRedisNativeClient.Db">
             <summary>Gets or sets the database.</summary>
            
             <value>The database.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisNativeClient.DbSize">
             <summary>Gets the size of the database.</summary>
            
             <value>The size of the database.</value>
        </member>
        <member name="P:NServiceKit.Redis.IRedisNativeClient.LastSave">
             <summary>Gets the Date/Time of the last save.</summary>
            
             <value>The last save.</value>
        </member>
        <member name="T:NServiceKit.Redis.IRedisSet">
            <summary>Interface for redis set.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.GetRangeFromSortedSet(System.Int32,System.Int32)">
             <summary>Gets range from sorted set.</summary>
            
             <param name="startingFrom">The starting from.</param>
             <param name="endingAt">    The ending at.</param>
            
             <returns>The range from sorted set.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.Pop">
             <summary>Removes and returns the top-of-stack object.</summary>
            
             <returns>The previous top-of-stack object.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.Move(System.String,NServiceKit.Redis.IRedisSet)">
             <summary>Moves.</summary>
            
             <param name="value">The value.</param>
             <param name="toSet">Set to belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.Intersect(NServiceKit.Redis.IRedisSet[])">
             <summary>Intersects the given with sets.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
            
             <returns>A HashSet&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.StoreIntersect(NServiceKit.Redis.IRedisSet[])">
             <summary>Stores an intersect.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.Union(NServiceKit.Redis.IRedisSet[])">
             <summary>Unions the given with sets.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
            
             <returns>A HashSet&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.StoreUnion(NServiceKit.Redis.IRedisSet[])">
             <summary>Stores an union.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.Diff(NServiceKit.Redis.IRedisSet[])">
             <summary>Compares this IRedisSet[] object to another to determine their relative ordering.</summary>
            
             <param name="withSets">Sets the with belongs to.</param>
            
             <returns>A HashSet&lt;string&gt;</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.StoreDiff(NServiceKit.Redis.IRedisSet,NServiceKit.Redis.IRedisSet[])">
             <summary>Stores a difference.</summary>
            
             <param name="fromSet"> Set from belongs to.</param>
             <param name="withSets">Sets the with belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSet.GetRandomEntry">
             <summary>Gets random entry.</summary>
            
             <returns>The random entry.</returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisSortedSet">
            <summary>Interface for redis sorted set.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetAll">
             <summary>Gets all.</summary>
            
             <returns>all.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetRange(System.Int32,System.Int32)">
             <summary>Finds the range of the given arguments.</summary>
            
             <param name="startingRank">The starting rank.</param>
             <param name="endingRank">  The ending rank.</param>
            
             <returns>The calculated range.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetRangeByScore(System.String,System.String)">
             <summary>Gets range by score.</summary>
            
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
            
             <returns>The range by score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetRangeByScore(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range by score.</summary>
            
             <param name="fromStringScore">from string score.</param>
             <param name="toStringScore">  to string score.</param>
             <param name="skip">           The skip.</param>
             <param name="take">           The take.</param>
            
             <returns>The range by score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetRangeByScore(System.Double,System.Double)">
             <summary>Gets range by score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
            
             <returns>The range by score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetRangeByScore(System.Double,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>Gets range by score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
             <param name="skip">     The skip.</param>
             <param name="take">     The take.</param>
            
             <returns>The range by score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.RemoveRange(System.Int32,System.Int32)">
             <summary>Removes the range.</summary>
            
             <param name="fromRank">from rank.</param>
             <param name="toRank">  to rank.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.RemoveRangeByScore(System.Double,System.Double)">
             <summary>Removes the range by score.</summary>
            
             <param name="fromScore">from score.</param>
             <param name="toScore">  to score.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.StoreFromIntersect(NServiceKit.Redis.IRedisSortedSet[])">
             <summary>Stores from intersect.</summary>
            
             <param name="ofSets">Sets the of belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.StoreFromUnion(NServiceKit.Redis.IRedisSortedSet[])">
             <summary>Stores from union.</summary>
            
             <param name="ofSets">Sets the of belongs to.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetItemIndex(System.String)">
             <summary>Gets item index.</summary>
            
             <param name="value">The value.</param>
            
             <returns>The item index.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.GetItemScore(System.String)">
             <summary>Gets item score.</summary>
            
             <param name="value">The value.</param>
            
             <returns>The item score.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.IncrementItemScore(System.String,System.Double)">
             <summary>Increment item score.</summary>
            
             <param name="value">           The value.</param>
             <param name="incrementByScore">The increment by score.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.PopItemWithHighestScore">
             <summary>Pops the item with highest score.</summary>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSortedSet.PopItemWithLowestScore">
             <summary>Pops the item with lowest score.</summary>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.Redis.IRedisSubscription">
            <summary>Interface for redis subscription.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSubscription.SubscribeToChannels(System.String[])">
            <summary>
            Subscribe to channels by name
            </summary>
            <param name="channels"></param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSubscription.SubscribeToChannelsMatching(System.String[])">
            <summary>
            Subscribe to channels matching the supplied patterns
            </summary>
            <param name="patterns"></param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSubscription.UnSubscribeFromAllChannels">
            <summary>Un subscribe from all channels.</summary>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSubscription.UnSubscribeFromChannels(System.String[])">
             <summary>Un subscribe from channels.</summary>
            
             <param name="channels">.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisSubscription.UnSubscribeFromChannelsMatching(System.String[])">
             <summary>Un subscribe from channels matching.</summary>
            
             <param name="patterns">.</param>
        </member>
        <member name="P:NServiceKit.Redis.IRedisSubscription.SubscriptionCount">
            <summary>
            The number of active subscriptions this client has
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.IRedisSubscription.OnSubscribe">
            <summary>
            Registered handler called after client *Subscribes* to each new channel
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.IRedisSubscription.OnMessage">
            <summary>
            Registered handler called when each message is received
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.IRedisSubscription.OnUnSubscribe">
            <summary>
            Registered handler called when each channel is unsubscribed
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.IRedisTransaction">
            <summary>
            Interface to redis transaction
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.IRedisTransactionBase">
            <summary>
            Base transaction interface, shared by typed and non-typed transactions
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.Pipeline.IRedisQueueableOperation">
            <summary>
            interface to operation that can queue commands
            </summary>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Action{NServiceKit.Redis.IRedisClient})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Action{NServiceKit.Redis.IRedisClient},System.Action)">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Action{NServiceKit.Redis.IRedisClient},System.Action,System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int32})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int32},System.Action{System.Int32})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int32},System.Action{System.Int32},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int64})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int64},System.Action{System.Int64})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Int64},System.Action{System.Int64},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Boolean})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Boolean},System.Action{System.Boolean})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Boolean},System.Action{System.Boolean},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Double})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Double},System.Action{System.Double})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Double},System.Action{System.Double},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[]})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[]},System.Action{System.Byte[]})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[]},System.Action{System.Byte[]},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[][]})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[][]},System.Action{System.Byte[][]})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Byte[][]},System.Action{System.Byte[][]},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.String})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.String},System.Action{System.String})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.String},System.Action{System.String},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Collections.Generic.List{System.String}})">
             <summary>Queue command.</summary>
            
             <param name="command">The command.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Collections.Generic.List{System.String}},System.Action{System.Collections.Generic.List{System.String}})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.Pipeline.IRedisQueueableOperation.QueueCommand(System.Func{NServiceKit.Redis.IRedisClient,System.Collections.Generic.List{System.String}},System.Action{System.Collections.Generic.List{System.String}},System.Action{System.Exception})">
             <summary>Queue command.</summary>
            
             <param name="command">          The command.</param>
             <param name="onSuccessCallback">The on success callback.</param>
             <param name="onErrorCallback">  The on error callback.</param>
        </member>
        <member name="M:NServiceKit.Redis.IRedisTransaction.Commit">
             <summary>Commits this object.</summary>
            
             <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:NServiceKit.Redis.IRedisTransaction.Rollback">
            <summary>Rollbacks this object.</summary>
        </member>
        <member name="T:NServiceKit.Redis.ItemRef">
            <summary>An item reference.</summary>
        </member>
        <member name="P:NServiceKit.Redis.ItemRef.Id">
             <summary>Gets or sets the identifier.</summary>
            
             <value>The identifier.</value>
        </member>
        <member name="P:NServiceKit.Redis.ItemRef.Item">
             <summary>Gets or sets the item.</summary>
            
             <value>The item.</value>
        </member>
        <member name="T:NServiceKit.Redis.Pipeline.IRedisPipeline">
            <summary>
            Interface to redis pipeline
            </summary>
        </member>
        <member name="T:NServiceKit.Redis.RedisKeyType">
            <summary>Values that represent RedisKeyType.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.None">
            <summary>An enum constant representing the none option.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.String">
            <summary>An enum constant representing the string option.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.List">
            <summary>An enum constant representing the list option.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.Set">
            <summary>An enum constant representing the set option.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.SortedSet">
            <summary>An enum constant representing the sorted set option.</summary>
        </member>
        <member name="F:NServiceKit.Redis.RedisKeyType.Hash">
            <summary>An enum constant representing the hash option.</summary>
        </member>
        <member name="T:NServiceKit.Redis.SortOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.SortPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.Skip">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.Take">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.GetPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.SortAlpha">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.SortDesc">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.Redis.SortOptions.StoreAtKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceKit.SearchIndex.FullTextIndexAttribute">
            <summary>Bitfield of flags for specifying FullTextIndexAttribute.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.IsDefault">
            <summary>A binary constant representing the is default flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.IsKey">
            <summary>A binary constant representing the is key flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.NoIndex">
            <summary>A binary constant representing the no index flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.IndexTokenized">
            <summary>A binary constant representing the index tokenized flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.IndexUnTokenized">
            <summary>A binary constant representing the index un tokenized flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.NoStore">
            <summary>A binary constant representing the no store flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.StoreCompressed">
            <summary>A binary constant representing the store compressed flag.</summary>
        </member>
        <member name="F:NServiceKit.SearchIndex.FullTextIndexAttribute.StoreUncompressed">
            <summary>A binary constant representing the store uncompressed flag.</summary>
        </member>
        <member name="T:NServiceKit.SearchIndex.FullTextIndexDocumentAttribute">
            <summary>Attribute for full text index document.</summary>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexDocumentAttribute.#ctor">
            <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexDocumentAttribute class.</summary>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexDocumentAttribute.#ctor(System.Type)">
             <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexDocumentAttribute class.</summary>
            
             <param name="forType">Type of for.</param>
        </member>
        <member name="P:NServiceKit.SearchIndex.FullTextIndexDocumentAttribute.ForType">
             <summary>Gets or sets the type of for.</summary>
            
             <value>The type of for.</value>
        </member>
        <member name="T:NServiceKit.SearchIndex.FullTextIndexFieldAttribute">
            <summary>Attribute for full text index field.</summary>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.#ctor">
            <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexFieldAttribute class.</summary>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.#ctor(NServiceKit.SearchIndex.FullTextIndexAttribute)">
             <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexFieldAttribute class.</summary>
            
             <param name="fieldAttributes">The field attributes.</param>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.#ctor(NServiceKit.SearchIndex.FullTextIndexAttribute,System.String)">
             <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexFieldAttribute class.</summary>
            
             <param name="fieldAttributes">The field attributes.</param>
             <param name="memberPath">     Full pathname of the member file.</param>
        </member>
        <member name="M:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.SearchIndex.FullTextIndexFieldAttribute class.</summary>
            
             <param name="memberTypePropertyName">Name of the member type property.</param>
        </member>
        <member name="P:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.FieldAttributes">
             <summary>Gets the field attributes.</summary>
            
             <value>The field attributes.</value>
        </member>
        <member name="P:NServiceKit.SearchIndex.FullTextIndexFieldAttribute.MemberPath">
             <summary>Gets or sets the full pathname of the member file.</summary>
            
             <value>The full pathname of the member file.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.EndpointAttributes">
            <summary>Bitfield of flags for specifying EndpointAttributes.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.None">
            <summary>A binary constant representing the none flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Any">
            <summary>A binary constant representing any flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnyNetworkAccessType">
            <summary>A binary constant representing any network access type flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnySecurityMode">
            <summary>A binary constant representing any security mode flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnyHttpMethod">
            <summary>A binary constant representing any HTTP method flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnyCallStyle">
            <summary>A binary constant representing any call style flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnyFormat">
            <summary>A binary constant representing any format flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.AnyEndpoint">
            <summary>A binary constant representing any endpoint flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.InternalNetworkAccess">
            <summary>A binary constant representing the internal network access flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Localhost">
            <summary>Whether it came from an Internal or External address</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.LocalSubnet">
            <summary>A binary constant representing the local subnet flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.External">
            <summary>A binary constant representing the external flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Secure">
            <summary>A binary constant representing the secure flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.InSecure">
            <summary>A binary constant representing the in secure flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpHead">
            <summary>A binary constant representing the HTTP head flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpGet">
            <summary>A binary constant representing the HTTP get flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpPost">
            <summary>A binary constant representing the HTTP post flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpPut">
            <summary>A binary constant representing the HTTP put flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpDelete">
            <summary>A binary constant representing the HTTP delete flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpPatch">
            <summary>A binary constant representing the HTTP patch flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpOptions">
            <summary>A binary constant representing the HTTP options flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.HttpOther">
            <summary>A binary constant representing the HTTP other flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.OneWay">
            <summary>An enum constant representing the one way option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Reply">
            <summary>A binary constant representing the reply flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Soap11">
            <summary>An enum constant representing the SOAP 11 option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Soap12">
            <summary>A binary constant representing the SOAP 12 flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Xml">
            <summary>An enum constant representing the XML option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Json">
            <summary>An enum constant representing the JSON option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Jsv">
            <summary>An enum constant representing the jsv option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.ProtoBuf">
            <summary>An enum constant representing the prototype buffer option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Csv">
            <summary>An enum constant representing the CSV option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Html">
            <summary>An enum constant representing the HTML option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Yaml">
            <summary>An enum constant representing the yaml option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.MsgPack">
            <summary>An enum constant representing the message pack option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.FormatOther">
            <summary>An enum constant representing the format other option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Http">
            <summary>An enum constant representing the HTTP option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.MessageQueue">
            <summary>An enum constant representing the message queue option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.Tcp">
            <summary>An enum constant representing the TCP option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.EndpointAttributes.EndpointOther">
            <summary>An enum constant representing the endpoint other option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.Network">
            <summary>Values that represent Network.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Network.Localhost">
            <summary>An enum constant representing the localhost option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Network.LocalSubnet">
            <summary>An enum constant representing the local subnet option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Network.External">
            <summary>An enum constant representing the external option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.Security">
            <summary>Values that represent Security.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Security.Secure">
            <summary>An enum constant representing the secure option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Security.InSecure">
            <summary>An enum constant representing the in secure option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.Http">
            <summary>Values that represent Http.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Head">
            <summary>An enum constant representing the head option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Get">
            <summary>An enum constant representing the get option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Post">
            <summary>An enum constant representing the post option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Put">
            <summary>An enum constant representing the put option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Delete">
            <summary>An enum constant representing the delete option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Patch">
            <summary>An enum constant representing the patch option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Options">
            <summary>An enum constant representing the options option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Http.Other">
            <summary>An enum constant representing the other option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.CallStyle">
            <summary>Values that represent CallStyle.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.CallStyle.OneWay">
            <summary>An enum constant representing the one way option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.CallStyle.Reply">
            <summary>An enum constant representing the reply option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.Format">
            <summary>Values that represent Format.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Soap11">
            <summary>An enum constant representing the SOAP 11 option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Soap12">
            <summary>An enum constant representing the SOAP 12 option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Xml">
            <summary>An enum constant representing the XML option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Json">
            <summary>An enum constant representing the JSON option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Jsv">
            <summary>An enum constant representing the jsv option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.ProtoBuf">
            <summary>An enum constant representing the prototype buffer option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Csv">
            <summary>An enum constant representing the CSV option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Html">
            <summary>An enum constant representing the HTML option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Yaml">
            <summary>An enum constant representing the yaml option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.MsgPack">
            <summary>An enum constant representing the message pack option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Format.Other">
            <summary>An enum constant representing the other option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.Endpoint">
            <summary>Values that represent Endpoint.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Endpoint.Http">
            <summary>An enum constant representing the HTTP option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Endpoint.MessageQueue">
            <summary>An enum constant representing the message queue option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Endpoint.Tcp">
            <summary>An enum constant representing the TCP option.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Endpoint.Other">
            <summary>An enum constant representing the other option.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.EndpointAttributesExtensions">
            <summary>An endpoint attributes extensions.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.IsLocalhost(NServiceKit.ServiceHost.EndpointAttributes)">
             <summary>The EndpointAttributes extension method that query if 'attrs' is localhost.</summary>
            
             <param name="attrs">The attrs to act on.</param>
            
             <returns>true if localhost, false if not.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.IsLocalSubnet(NServiceKit.ServiceHost.EndpointAttributes)">
             <summary>The EndpointAttributes extension method that query if 'attrs' is local subnet.</summary>
            
             <param name="attrs">The attrs to act on.</param>
            
             <returns>true if local subnet, false if not.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.IsExternal(NServiceKit.ServiceHost.EndpointAttributes)">
             <summary>The EndpointAttributes extension method that query if 'attrs' is external.</summary>
            
             <param name="attrs">The attrs to act on.</param>
            
             <returns>true if external, false if not.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.ToFormat(System.String)">
             <summary>A Feature extension method that converts a feature to a format.</summary>
            
             <param name="format">The format to act on.</param>
            
             <returns>feature as a Format.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.FromFormat(NServiceKit.ServiceHost.Format)">
             <summary>A Format extension method that initializes this object from the given from format.</summary>
            
             <param name="format">The format to act on.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.ToFormat(NServiceKit.ServiceHost.Feature)">
             <summary>A Feature extension method that converts a feature to a format.</summary>
            
             <param name="feature">The feature to act on.</param>
            
             <returns>feature as a Format.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.ToFeature(NServiceKit.ServiceHost.Format)">
             <summary>A Format extension method that converts a format to a feature.</summary>
            
             <param name="format">The format to act on.</param>
            
             <returns>format as a Feature.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.EndpointAttributesExtensions.ToSoapFeature(NServiceKit.ServiceHost.EndpointAttributes)">
             <summary>The EndpointAttributes extension method that converts the attributes to a SOAP feature.</summary>
            
             <param name="attributes">The attributes to act on.</param>
            
             <returns>attributes as a Feature.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.Feature">
            <summary>Bitfield of flags for specifying Feature.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.None">
            <summary>A binary constant representing the none flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.All">
            <summary>A binary constant representing all flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Soap">
            <summary>A binary constant representing the SOAP flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Metadata">
            <summary>A binary constant representing the metadata flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.PredefinedRoutes">
            <summary>A binary constant representing the predefined routes flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.RequestInfo">
            <summary>A binary constant representing the request information flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Json">
            <summary>A binary constant representing the JSON flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Xml">
            <summary>A binary constant representing the XML flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Jsv">
            <summary>A binary constant representing the jsv flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Soap11">
            <summary>A binary constant representing the SOAP 11 flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Soap12">
            <summary>A binary constant representing the SOAP 12 flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Csv">
            <summary>A binary constant representing the CSV flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Html">
            <summary>A binary constant representing the HTML flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.CustomFormat">
            <summary>A binary constant representing the custom format flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Markdown">
            <summary>A binary constant representing the markdown flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.Razor">
            <summary>A binary constant representing the razor flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.ProtoBuf">
            <summary>A binary constant representing the prototype buffer flag.</summary>
        </member>
        <member name="F:NServiceKit.ServiceHost.Feature.MsgPack">
            <summary>A binary constant representing the message pack flag.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IAsyncService`1">
            <summary>
            If the Service also implements this interface,
            IAsyncService.ExecuteAsync() will be used instead of IService.Execute() for 
            EndpointAttributes.AsyncOneWay requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IAsyncService`1.ExecuteAsync(`0)">
             <summary>Executes the asynchronous operation.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IContentTypeFilter">
            <summary>Interface for content type filter.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IContentTypeWriter">
            <summary>Interface for content type writer.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeWriter.SerializeToBytes(NServiceKit.ServiceHost.IRequestContext,System.Object)">
             <summary>Serialize to bytes.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="response">      The response.</param>
            
             <returns>A byte[].</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeWriter.SerializeToString(NServiceKit.ServiceHost.IRequestContext,System.Object)">
             <summary>Serialize to string.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="response">      The response.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeWriter.SerializeToStream(NServiceKit.ServiceHost.IRequestContext,System.Object,System.IO.Stream)">
             <summary>Serialize to stream.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="response">      The response.</param>
             <param name="toStream">      to stream.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeWriter.SerializeToResponse(NServiceKit.ServiceHost.IRequestContext,System.Object,NServiceKit.ServiceHost.IHttpResponse)">
             <summary>Serialize to response.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="response">      The response.</param>
             <param name="httpRes">       The HTTP resource.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeWriter.GetResponseSerializer(System.String)">
             <summary>Gets response serializer.</summary>
            
             <param name="contentType">Type of the content.</param>
            
             <returns>The response serializer.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IContentTypeReader">
            <summary>Interface for content type reader.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeReader.DeserializeFromString(System.String,System.Type,System.String)">
             <summary>Deserialize from string.</summary>
            
             <param name="contentType">Type of the content.</param>
             <param name="type">       The type.</param>
             <param name="request">    The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeReader.DeserializeFromStream(System.String,System.Type,System.IO.Stream)">
             <summary>Deserialize from stream.</summary>
            
             <param name="contentType">  Type of the content.</param>
             <param name="type">         The type.</param>
             <param name="requestStream">The request stream.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeReader.GetStreamDeserializer(System.String)">
             <summary>Gets stream deserializer.</summary>
            
             <param name="contentType">Type of the content.</param>
            
             <returns>The stream deserializer.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeFilter.GetFormatContentType(System.String)">
             <summary>Gets format content type.</summary>
            
             <param name="format">Describes the format to use.</param>
            
             <returns>The format content type.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeFilter.Register(System.String,NServiceKit.ServiceHost.StreamSerializerDelegate,NServiceKit.ServiceHost.StreamDeserializerDelegate)">
             <summary>Registers this object.</summary>
            
             <param name="contentType">       Type of the content.</param>
             <param name="streamSerializer">  The stream serializer.</param>
             <param name="streamDeserializer">The stream deserializer.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeFilter.Register(System.String,NServiceKit.ServiceHost.ResponseSerializerDelegate,NServiceKit.ServiceHost.StreamDeserializerDelegate)">
             <summary>Registers this object.</summary>
            
             <param name="contentType">       Type of the content.</param>
             <param name="responseSerializer">The response serializer.</param>
             <param name="streamDeserializer">The stream deserializer.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IContentTypeFilter.ClearCustomFilters">
            <summary>Clears the custom filters.</summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IContentTypeFilter.ContentTypeFormats">
             <summary>Gets the content type formats.</summary>
            
             <value>The content type formats.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.TextDeserializerDelegate">
             <summary>Text deserializer delegate.</summary>
            
             <param name="type">The type.</param>
             <param name="dto"> The dto.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.StreamDeserializerDelegate">
             <summary>Stream deserializer delegate.</summary>
            
             <param name="type">      The type.</param>
             <param name="fromStream">from stream.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.TextSerializerDelegate">
             <summary>Text serializer delegate.</summary>
            
             <param name="dto">The dto.</param>
            
             <returns>A string.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.StreamSerializerDelegate">
             <summary>Stream serializer delegate.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="dto">           The dto.</param>
             <param name="outputStream">  Stream to write data to.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.ResponseSerializerDelegate">
             <summary>Response serializer delegate.</summary>
            
             <param name="requestContext">Context for the request.</param>
             <param name="dto">           The dto.</param>
             <param name="httpRes">       The HTTP resource.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.ICookies">
            <summary>Interface for cookies.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.ICookies.DeleteCookie(System.String)">
             <summary>Deletes the cookie described by cookieName.</summary>
            
             <param name="cookieName">Name of the cookie.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.ICookies.AddCookie(System.Net.Cookie)">
             <summary>Adds a cookie.</summary>
            
             <param name="cookie">The cookie.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.ICookies.AddPermanentCookie(System.String,System.String,System.Nullable{System.Boolean})">
             <summary>Adds a permanent cookie.</summary>
            
             <param name="cookieName"> Name of the cookie.</param>
             <param name="cookieValue">The cookie value.</param>
             <param name="secureOnly"> The secure only.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.ICookies.AddSessionCookie(System.String,System.String,System.Nullable{System.Boolean})">
             <summary>Adds a session cookie.</summary>
            
             <param name="cookieName"> Name of the cookie.</param>
             <param name="cookieValue">The cookie value.</param>
             <param name="secureOnly"> The secure only.</param>
        </member>
        <member name="T:NServiceKit.WebHost.Endpoints.Support.Markdown.IExpirable">
            <summary>Interface for expirable.</summary>
        </member>
        <member name="P:NServiceKit.WebHost.Endpoints.Support.Markdown.IExpirable.LastModified">
             <summary>Gets the Date/Time of the last modified.</summary>
            
             <value>The last modified.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IFile">
            <summary>Interface for file.</summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IFile.FileName">
             <summary>Gets the filename of the file.</summary>
            
             <value>The name of the file.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IFile.ContentLength">
             <summary>Gets the length of the content.</summary>
            
             <value>The length of the content.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IFile.ContentType">
             <summary>Gets the type of the content.</summary>
            
             <value>The type of the content.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IFile.InputStream">
             <summary>Gets the input stream.</summary>
            
             <value>The input stream.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IHasOptions">
            <summary>Interface for has options.</summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHasOptions.Options">
             <summary>Gets options for controlling the operation.</summary>
            
             <value>The options.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IHttpError">
            <summary>Interface for HTTP error.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IHttpResult">
            <summary>Interface for HTTP result.</summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.Status">
            <summary>
            The HTTP Response Status
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.StatusCode">
            <summary>
            The HTTP Response Status Code
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.StatusDescription">
            <summary>
            The HTTP Status Description
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.ContentType">
            <summary>
            The HTTP Response ContentType
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.Headers">
            <summary>
            Additional HTTP Headers
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.Response">
            <summary>
            Response DTO
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.ResponseFilter">
            <summary>
            if not provided, get's injected by NServiceKit
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResult.RequestContext">
            <summary>
            Holds the request call context
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpError.Message">
             <summary>Gets the message.</summary>
            
             <value>The message.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpError.ErrorCode">
             <summary>Gets the error code.</summary>
            
             <value>The error code.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IHttpResponse">
            <summary>
            A thin wrapper around ASP.NET or HttpListener's HttpResponse
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.AddHeader(System.String,System.String)">
             <summary>Adds a header to 'value'.</summary>
            
             <param name="name"> The name.</param>
             <param name="value">The value.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.Redirect(System.String)">
             <summary>Redirects the given document.</summary>
            
             <param name="url">URL of the document.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.Write(System.String)">
             <summary>Writes.</summary>
            
             <param name="text">The text to write.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.Close">
            <summary>
            Signal that this response has been handled and no more processing should be done.
            When used in a request or response filter, no more filters or processing is done on this request.
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.End">
            <summary>
            Calls Response.End() on ASP.NET HttpResponse otherwise is an alias for Close().
            Useful when you want to prevent ASP.NET to provide it's own custom error page.
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.Flush">
            <summary>
            Response.Flush() and OutputStream.Flush() seem to have different behaviour in ASP.NET
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IHttpResponse.SetContentLength(System.Int64)">
             <summary>Sets content length.</summary>
            
             <param name="contentLength">Length of the content.</param>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.OriginalResponse">
            <summary>
            The underlying ASP.NET or HttpListener HttpResponse
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.StatusCode">
             <summary>Gets or sets the status code.</summary>
            
             <value>The status code.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.StatusDescription">
             <summary>Gets or sets information describing the status.</summary>
            
             <value>Information describing the status.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.ContentType">
             <summary>Gets or sets the type of the content.</summary>
            
             <value>The type of the content.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.Cookies">
             <summary>Gets the cookies.</summary>
            
             <value>The cookies.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.OutputStream">
             <summary>Gets the output stream.</summary>
            
             <value>The output stream.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IHttpResponse.IsClosed">
            <summary>
            Gets a value indicating whether this instance is closed.
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRequestAttributes">
            <summary>Interface for request attributes.</summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestAttributes.AcceptsGzip">
             <summary>Gets a value indicating whether the accepts gzip.</summary>
            
             <value>true if accepts gzip, false if not.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestAttributes.AcceptsDeflate">
             <summary>Gets a value indicating whether the accepts deflate.</summary>
            
             <value>true if accepts deflate, false if not.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRequestContext">
            <summary>Interface for request context.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRequestContext.Get``1">
             <summary>Gets the get.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
            
             <returns>A T.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRequestContext.GetHeader(System.String)">
             <summary>Gets a header.</summary>
            
             <param name="headerName">Name of the header.</param>
            
             <returns>The header.</returns>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.IpAddress">
             <summary>Gets the IP address.</summary>
            
             <value>The IP address.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.Cookies">
             <summary>Gets the cookies.</summary>
            
             <value>The cookies.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.EndpointAttributes">
             <summary>Gets the endpoint attributes.</summary>
            
             <value>The endpoint attributes.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.RequestAttributes">
             <summary>Gets the request attributes.</summary>
            
             <value>The request attributes.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.ContentType">
             <summary>Gets the type of the content.</summary>
            
             <value>The type of the content.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.ResponseContentType">
             <summary>Gets the type of the response content.</summary>
            
             <value>The type of the response content.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.CompressionType">
             <summary>Gets the type of the compression.</summary>
            
             <value>The type of the compression.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.AbsoluteUri">
             <summary>Gets URI of the absolute.</summary>
            
             <value>The absolute URI.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.PathInfo">
             <summary>Gets information describing the path.</summary>
            
             <value>Information describing the path.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestContext.Files">
             <summary>Gets the files.</summary>
            
             <value>The files.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRequestLogger">
            <summary>
            Log every service request
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRequestLogger.Log(NServiceKit.ServiceHost.IRequestContext,System.Object,System.Object,System.TimeSpan)">
            <summary>
            Log a request
            </summary>
            <param name="requestContext">The RequestContext</param>
            <param name="requestDto">Request DTO</param>
            <param name="response">Response DTO or Exception</param>
            <param name="elapsed">How long did the Request take</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRequestLogger.GetLatestLogs(System.Nullable{System.Int32})">
            <summary>
            View the most recent logs
            </summary>
            <param name="take"></param>
            <returns></returns>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.EnableSessionTracking">
            <summary>
            Turn On/Off Session Tracking
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.EnableRequestBodyTracking">
            <summary>
            Turn On/Off Raw Request Body Tracking
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.EnableResponseTracking">
            <summary>
            Turn On/Off Tracking of Responses
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.EnableErrorTracking">
            <summary>
            Turn On/Off Tracking of Exceptions
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.RequiredRoles">
            <summary>
            Limit access to /requestlogs service to role
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.ExcludeRequestDtoTypes">
            <summary>
            Don't log requests of these types.
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequestLogger.HideRequestBodyForRequestDtoTypes">
            <summary>
            Don't log request bodys for services with sensitive information.
            By default Auth and Registration requests are hidden.
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRequiresRequestContext">
            <summary>
            Implement on services that need access to the RequestContext
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRequiresRequestContext.RequestContext">
             <summary>Gets or sets a context for the request.</summary>
            
             <value>The request context.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestDeleteService`1">
            <summary>
            If the Service also implements this interface,
            IRestDeleteService.Delete() will be used instead of IService.Execute() for 
            EndpointAttributes.HttpDelete requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestDeleteService`1.Delete(`0)">
             <summary>Deletes the given request.</summary>
            
             <param name="request">The request to delete.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestGetService`1">
            <summary>
            If the Service also implements this interface,
            IRestGetService.Get() will be used instead of IService.Execute() for 
            EndpointAttributes.HttpGet requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestGetService`1.Get(`0)">
             <summary>Gets the given request.</summary>
            
             <param name="request">The request to get.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestPatchService`1">
            <summary>
            If the Service also implements this interface,
            IRestPutService.Patch() will be used instead of IService.Execute() for 
            EndpointAttributes.HttpPatch requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestPatchService`1.Patch(`0)">
             <summary>Patches the given request.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestPath">
            <summary>Interface for rest path.</summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestPath.CreateRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
             <summary>Creates a request.</summary>
            
             <param name="pathInfo">              Information describing the path.</param>
             <param name="queryStringAndFormData">Information describing the query string and form.</param>
             <param name="fromInstance">          from instance.</param>
            
             <returns>The new request.</returns>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRestPath.IsWildCardPath">
             <summary>Gets a value indicating whether this object is wild card path.</summary>
            
             <value>true if this object is wild card path, false if not.</value>
        </member>
        <member name="P:NServiceKit.ServiceHost.IRestPath.RequestType">
             <summary>Gets the type of the request.</summary>
            
             <value>The type of the request.</value>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestPostService`1">
            <summary>
            If the Service also implements this interface,
            IRestPostService.Post() will be used instead of IService.Execute() for 
            EndpointAttributes.HttpPost requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestPostService`1.Post(`0)">
             <summary>Post this message.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestPutService`1">
            <summary>
            If the Service also implements this interface,
            IRestPutService.Put() will be used instead of IService.Execute() for 
            EndpointAttributes.HttpPut requests
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IRestPutService`1.Put(`0)">
             <summary>Puts the given request.</summary>
            
             <param name="request">The request to put.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IRestService`1">
            <summary>
            Utility interface that implements all Rest operations
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:NServiceKit.ServiceHost.IService">
            <summary>
            Marker interfaces
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IReturn">
            <summary>Interface for return.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IReturn`1">
             <summary>Interface for return.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="T:NServiceKit.ServiceHost.IReturnVoid">
            <summary>Interface for return void.</summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IAny`1">
            <summary>
            Interface for any.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IAny`1.Any(`0)">
             <summary>Anies the given request.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IGet`1">
             <summary>Interface for get.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IGet`1.Get(`0)">
             <summary>Gets the given request.</summary>
            
             <param name="request">The request to get.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPost`1">
             <summary>Interface for post.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPost`1.Post(`0)">
             <summary>Post this message.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPut`1">
             <summary>Interface for put.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPut`1.Put(`0)">
             <summary>Puts the given request.</summary>
            
             <param name="request">The request to put.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IDelete`1">
             <summary>Interface for delete.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IDelete`1.Delete(`0)">
             <summary>Deletes the given request.</summary>
            
             <param name="request">The request to delete.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPatch`1">
             <summary>Interface for patch.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPatch`1.Patch(`0)">
             <summary>Patches the given request.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IOptions`1">
             <summary>Interface for options.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IOptions`1.Options(`0)">
             <summary>Options the given request.</summary>
            
             <param name="request">The request.</param>
            
             <returns>An object.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.IAnyVoid`1">
             <summary>Interface for any void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IAnyVoid`1.Any(`0)">
             <summary>Anies the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IGetVoid`1">
             <summary>Interface for get void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IGetVoid`1.Get(`0)">
             <summary>Gets the given request.</summary>
            
             <param name="request">The request to get.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPostVoid`1">
             <summary>Interface for post void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPostVoid`1.Post(`0)">
             <summary>Post this message.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPutVoid`1">
             <summary>Interface for put void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPutVoid`1.Put(`0)">
             <summary>Puts the given request.</summary>
            
             <param name="request">The request to put.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IDeleteVoid`1">
             <summary>Interface for delete void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IDeleteVoid`1.Delete(`0)">
             <summary>Deletes the given request.</summary>
            
             <param name="request">The request to delete.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IPatchVoid`1">
             <summary>Interface for patch void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IPatchVoid`1.Patch(`0)">
             <summary>Patches the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IOptionsVoid`1">
             <summary>Interface for options void.</summary>
            
             <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:NServiceKit.ServiceHost.IOptionsVoid`1.Options(`0)">
             <summary>Options the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.IServiceController">
            <summary>
            Responsible for executing the operation within the specified context.
            </summary>
            <value>The operation types.</value>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceController.GetRestPathForRequest(System.String,System.String)">
            <summary>
            Returns the first matching RestPath
            </summary>
            <param name="httpMethod"></param>
            <param name="pathInfo"></param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceController.ExecuteMessage``1(NServiceKit.Messaging.IMessage{``0})">
            <summary>
            Executes the MQ DTO request.
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceController.ExecuteMessage``1(NServiceKit.Messaging.IMessage{``0},NServiceKit.ServiceHost.IRequestContext)">
            <summary>
            Executes the MQ DTO request with the supplied requestContext
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceController.Execute(System.Object,NServiceKit.ServiceHost.IRequestContext)">
            <summary>
            Executes the DTO request under the supplied requestContext.
            </summary>
            <param name="request"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="P:NServiceKit.ServiceHost.IServiceController.Routes">
            <summary>
            Allow the registration of custom routes
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.IServiceRoutes">
            <summary>
            Allow the registration of user-defined routes for services
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceRoutes.Add``1(System.String)">
            <summary>
            	Maps the specified REST path to the specified request DTO.
            </summary>
            <typeparam name="TRequest">The type of request DTO to map 
            	the path to.</typeparam>
            <param name="restPath">The path to map the request DTO to.
            	See <see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</param>
            <returns>The same <see cref="T:NServiceKit.ServiceHost.IServiceRoutes"/> instance;
            	never <see langword="null"/>.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceRoutes.Add``1(System.String,System.String)">
            <summary>
            	Maps the specified REST path to the specified request DTO, and
            	specifies the HTTP verbs supported by the path.
            </summary>
            <typeparam name="TRequest">The type of request DTO to map 
            	the path to.</typeparam>
            <param name="restPath">The path to map the request DTO to.
            	See <see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</param>
            <param name="verbs">
            	The comma-delimited list of HTTP verbs supported by the path, 
            	such as "GET,PUT,DELETE".  Specify empty or <see langword="null"/>
            	to indicate that all verbs are supported.
            </param>
            <returns>The same <see cref="T:NServiceKit.ServiceHost.IServiceRoutes"/> instance;
            	never <see langword="null"/>.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceRoutes.Add(System.Type,System.String,System.String)">
            <summary>
            	Maps the specified REST path to the specified request DTO, 
            	specifies the HTTP verbs supported by the path, and indicates
            	the default MIME type of the returned response.
            </summary>
            <param name="requestType">
            	The type of request DTO to map the path to.
            </param>
            <param name="restPath">The path to map the request DTO to.
            	See <see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</param>
            <param name="verbs">
            	The comma-delimited list of HTTP verbs supported by the path, 
            	such as "GET,PUT,DELETE".
            </param>
            <returns>The same <see cref="T:NServiceKit.ServiceHost.IServiceRoutes"/> instance;
            	never <see langword="null"/>.</returns>
        </member>
        <member name="M:NServiceKit.ServiceHost.IServiceRoutes.Add(System.Type,System.String,System.String,System.String,System.String)">
            <summary>
            	Maps the specified REST path to the specified request DTO, 
            	specifies the HTTP verbs supported by the path, and indicates
            	the default MIME type of the returned response.
            </summary>
            <param name="requestType">
            	The type of request DTO to map the path to.
            </param>
            <param name="restPath">The path to map the request DTO to.
            	See <see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</param>
            <param name="verbs">
            	The comma-delimited list of HTTP verbs supported by the path, 
            	such as "GET,PUT,DELETE".
            </param>
            <param name="summary">
                The short summary of what the REST does. 
            </param>
            <param name="notes">
                The longer text to explain the behaviour of the REST. 
            </param>
            <returns>The same <see cref="T:NServiceKit.ServiceHost.IServiceRoutes"/> instance;
            	never <see langword="null"/>.</returns>
        </member>
        <member name="T:NServiceKit.ServiceHost.RestServiceAttribute">
            <summary>
            	Used to decorate Request DTO's to associate a RESTful request 
            	path mapping with a service.  Multiple attributes can be applied to 
            	each request DTO, to map multiple paths to the service.
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceHost.RouteAttribute">
            <summary>
            	Used to decorate Request DTO's to associate a RESTful request 
            	path mapping with a service.  Multiple attributes can be applied to 
            	each request DTO, to map multiple paths to the service.
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.RouteAttribute.#ctor(System.String)">
            <summary>
            	<para>Initializes an instance of the <see cref="T:NServiceKit.ServiceHost.RouteAttribute"/> class.</para>
            </summary>
            <param name="path">
            	<para>The path template to map to the request.  See 
            	<see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RouteAttribute.Path</see>
            	for details on the correct format.</para>
            </param>
        </member>
        <member name="M:NServiceKit.ServiceHost.RouteAttribute.#ctor(System.String,System.String)">
            <summary>
            	<para>Initializes an instance of the <see cref="T:NServiceKit.ServiceHost.RouteAttribute"/> class.</para>
            </summary>
            <param name="path">
            	<para>The path template to map to the request.  See 
            	<see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RouteAttribute.Path</see>
            	for details on the correct format.</para>
            </param>
            <param name="verbs">A comma-delimited list of HTTP verbs supported by the 
            	service.  If unspecified, all verbs are assumed to be supported.</param>
        </member>
        <member name="P:NServiceKit.ServiceHost.RouteAttribute.Path">
            <summary>
            	Gets or sets the path template to be mapped to the request.
            </summary>
            <value>
            	A <see cref="T:System.String"/> value providing the path mapped to
            	the request.  Never <see langword="null"/>.
            </value>
            <remarks>
            	<para>Some examples of valid paths are:</para>
            
            	<list>
            		<item>"/Inventory"</item>
            		<item>"/Inventory/{Category}/{ItemId}"</item>
            		<item>"/Inventory/{ItemPath*}"</item>
            	</list>
            
            	<para>Variables are specified within "{}"
            	brackets.  Each variable in the path is mapped to the same-named property 
            	on the request DTO.  At runtime, NServiceKit will parse the 
            	request URL, extract the variable values, instantiate the request DTO,
            	and assign the variable values into the corresponding request properties,
            	prior to passing the request DTO to the service object for processing.</para>
            
            	<para>It is not necessary to specify all request properties as
            	variables in the path.  For unspecified properties, callers may provide 
            	values in the query string.  For example: the URL 
            	"http://services/Inventory?Category=Books&amp;ItemId=12345" causes the same 
            	request DTO to be processed as "http://services/Inventory/Books/12345", 
            	provided that the paths "/Inventory" (which supports the first URL) and 
            	"/Inventory/{Category}/{ItemId}" (which supports the second URL)
            	are both mapped to the request DTO.</para>
            
            	<para>Please note that while it is possible to specify property values
            	in the query string, it is generally considered to be less RESTful and
            	less desirable than to specify them as variables in the path.  Using the 
            	query string to specify property values may also interfere with HTTP
            	caching.</para>
            
            	<para>The final variable in the path may contain a "*" suffix
            	to grab all remaining segments in the path portion of the request URL and assign
            	them to a single property on the request DTO.
            	For example, if the path "/Inventory/{ItemPath*}" is mapped to the request DTO,
            	then the request URL "http://services/Inventory/Books/12345" will result
            	in a request DTO whose ItemPath property contains "Books/12345".
            	You may only specify one such variable in the path, and it must be positioned at
            	the end of the path.</para>
            </remarks>
        </member>
        <member name="P:NServiceKit.ServiceHost.RouteAttribute.Summary">
            <summary>
               Gets or sets short summary of what the route does.
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.RouteAttribute.Notes">
            <summary>
               Gets or sets longer text to explain the behaviour of the route. 
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceHost.RouteAttribute.Verbs">
            <summary>
            	Gets or sets a comma-delimited list of HTTP verbs supported by the service, such as
            	"GET,PUT,POST,DELETE".
            </summary>
            <value>
            	A <see cref="T:System.String"/> providing a comma-delimited list of HTTP verbs supported
            	by the service, <see langword="null"/> or empty if all verbs are supported.
            </value>
        </member>
        <member name="P:NServiceKit.ServiceHost.RouteAttribute.TypeId">
            <summary>
            Required when using a TypeDescriptor to make it unique
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.RestServiceAttribute.#ctor(System.String)">
            <summary>
            	<para>Initializes an instance of the <see cref="T:NServiceKit.ServiceHost.RestServiceAttribute"/> class.</para>
            </summary>
            <param name="path">
            	<para>The path template to map to the request.  See 
            	<see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</para>
            </param>
        </member>
        <member name="M:NServiceKit.ServiceHost.RestServiceAttribute.#ctor(System.String,System.String)">
            <summary>
            	<para>Initializes an instance of the <see cref="T:NServiceKit.ServiceHost.RestServiceAttribute"/> class.</para>
            </summary>
            <param name="path">
            	<para>The path template to map to the request.  See 
            	<see cref="P:NServiceKit.ServiceHost.RouteAttribute.Path">RestServiceAttribute.Path</see>
            	for details on the correct format.</para>
            </param>
            <param name="verbs">A comma-delimited list of HTTP verbs supported by the 
            	service.  If unspecified, all verbs are assumed to be supported.</param>
        </member>
        <member name="T:NServiceKit.ServiceHost.FallbackRouteAttribute">
            <summary>
            Fallback routes have the lowest precedence, i.e. after normal Routes, static files or any matching Catch All Handlers.
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceHost.FallbackRouteAttribute.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.ServiceHost.FallbackRouteAttribute class.</summary>
            
             <param name="path">Full pathname of the file.</param>
        </member>
        <member name="M:NServiceKit.ServiceHost.FallbackRouteAttribute.#ctor(System.String,System.String)">
             <summary>Initializes a new instance of the NServiceKit.ServiceHost.FallbackRouteAttribute class.</summary>
            
             <param name="path"> Full pathname of the file.</param>
             <param name="verbs">The verbs.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfString">
            <content>An array of string.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfString.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfString class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfString.#ctor(System.Collections.Generic.IEnumerable{System.String})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfString class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfString.#ctor(System.String[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfString class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId">
            <content>An array of string identifier.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId.#ctor(System.Collections.Generic.IEnumerable{System.String})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId.#ctor(System.String[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfStringId class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid">
            <content>An array of unique identifier.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid.#ctor(System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid.#ctor(System.Guid[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuid class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId">
            <content>An array of unique identifier.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId.#ctor(System.Collections.Generic.IEnumerable{System.Guid})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId.#ctor(System.Guid[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfGuidId class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong">
            <content>An array of long.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong.#ctor(System.Int64[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLong class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId">
            <content>An array of long identifier.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId.#ctor(System.Int64[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfLongId class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt">
            <content>An array of int.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt.#ctor(System.Int32[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfInt class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId">
            <content>An array of int identifier.</content>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId.#ctor(System.Int32[])">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.ArrayOfIntId class.</summary>
            
             <param name="args">A variable-length parameters list containing arguments.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ErrorResponse">
            <summary>
            Generic ResponseStatus for when Response Type can't be inferred.
            In schemaless formats like JSON, JSV it has the same shape as a typed Response DTO
            </summary>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.IHasResponseStatus">
            <summary>
            Contract indication that the Response DTO has a ResponseStatus
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.IHasResponseStatus.ResponseStatus">
             <summary>Gets or sets the response status.</summary>
            
             <value>The response status.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ErrorResponse.ResponseStatus">
             <summary>Gets or sets the response status.</summary>
            
             <value>The response status.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ICacheByDateModified">
            <summary>Interface for cache by date modified.</summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ICacheByDateModified.LastModified">
             <summary>Gets the Date/Time of the last modified.</summary>
            
             <value>The last modified.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ICacheByEtag">
            <summary>Interface for cache by etag.</summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ICacheByEtag.Etag">
             <summary>Gets the etag.</summary>
            
             <value>The etag.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.IHasAction">
            <summary>Interface for has action.</summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.IHasAction.Action">
             <summary>Gets the action.</summary>
            
             <value>The action.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.IResponseStatusConvertible">
            <summary>Interface for response status convertible.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.IResponseStatusConvertible.ToResponseStatus">
             <summary>Converts this object to a response status.</summary>
            
             <returns>This object as the ResponseStatus.</returns>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.Property">
            <summary>A property.</summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.Property.Name">
             <summary>Gets or sets the name.</summary>
            
             <value>The name.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.Property.Value">
             <summary>Gets or sets the value.</summary>
            
             <value>The value.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.Properties">
            <summary>A properties.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.Properties.#ctor">
            <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.Properties class.</summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.Properties.#ctor(System.Collections.Generic.IEnumerable{NServiceKit.ServiceInterface.ServiceModel.Property})">
             <summary>Initializes a new instance of the NServiceKit.ServiceInterface.ServiceModel.Properties class.</summary>
            
             <param name="collection">The collection.</param>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry">
            <summary>
            A log entry added by the IRequestLogger
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.Id">
             <summary>Gets or sets the identifier.</summary>
            
             <value>The identifier.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.DateTime">
             <summary>Gets or sets the date time.</summary>
            
             <value>The date time.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.HttpMethod">
             <summary>Gets or sets the HTTP method.</summary>
            
             <value>The HTTP method.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.AbsoluteUri">
             <summary>Gets or sets URI of the absolute.</summary>
            
             <value>The absolute URI.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.PathInfo">
             <summary>Gets or sets information describing the path.</summary>
            
             <value>Information describing the path.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.RequestBody">
             <summary>Gets or sets the request body.</summary>
            
             <value>The request body.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.RequestDto">
             <summary>Gets or sets the request dto.</summary>
            
             <value>The request dto.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.UserAuthId">
             <summary>Gets or sets the identifier of the user authentication.</summary>
            
             <value>The identifier of the user authentication.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.SessionId">
             <summary>Gets or sets the identifier of the session.</summary>
            
             <value>The identifier of the session.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.IpAddress">
             <summary>Gets or sets the IP address.</summary>
            
             <value>The IP address.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.ForwardedFor">
             <summary>Gets or sets the forwarded for.</summary>
            
             <value>The forwarded for.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.Referer">
             <summary>Gets or sets the referer.</summary>
            
             <value>The referer.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.Headers">
             <summary>Gets or sets the headers.</summary>
            
             <value>The headers.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.FormData">
             <summary>Gets or sets information describing the form.</summary>
            
             <value>Information describing the form.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.Items">
             <summary>Gets or sets the items.</summary>
            
             <value>The items.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.Session">
             <summary>Gets or sets the session.</summary>
            
             <value>The session.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.ResponseDto">
             <summary>Gets or sets the response dto.</summary>
            
             <value>The response dto.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.ErrorResponse">
             <summary>Gets or sets the error response.</summary>
            
             <value>The error response.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.RequestLogEntry.RequestDuration">
             <summary>Gets or sets the duration of the request.</summary>
            
             <value>The request duration.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ResponseError">
            <summary>
            Error information pertaining to a particular named field.
            Used for returning multiple field validation errors.s
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseError.ErrorCode">
             <summary>Gets or sets the error code.</summary>
            
             <value>The error code.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseError.FieldName">
             <summary>Gets or sets the name of the field.</summary>
            
             <value>The name of the field.</value>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseError.Message">
             <summary>Gets or sets the message.</summary>
            
             <value>The message.</value>
        </member>
        <member name="T:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus">
            <summary>
            Common ResponseStatus class that should be present on all response DTO's
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus"/> class.
            
            A response status without an errorcode == success
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus"/> class.
            
            A response status with an errorcode == failure
            </summary>
        </member>
        <member name="M:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus"/> class.
            
            A response status with an errorcode == failure
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.ErrorCode">
            <summary>
            Holds the custom ErrorCode enum if provided in ValidationException
            otherwise will hold the name of the Exception type, e.g. typeof(Exception).Name
            
            A value of non-null means the service encountered an error while processing the request.
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.Message">
            <summary>
            A human friendly error message
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.StackTrace">
            <summary>
            
            </summary>
        </member>
        <member name="P:NServiceKit.ServiceInterface.ServiceModel.ResponseStatus.Errors">
            <summary>
            For multiple detailed validation errors.
            Can hold a specific error message for each named field.
            </summary>
        </member>
        <member name="T:NServiceKit.Service.IOneWayClient">
            <summary>
            Clients for sending one-way messages.
            </summary>
        </member>
        <member name="M:NServiceKit.Service.IOneWayClient.SendOneWay(System.Object)">
            <summary>
            Sends the request.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:NServiceKit.Service.IOneWayClient.SendOneWay(System.String,System.Object)">
            <summary>
            Sends the request to the specified URL.
            </summary>
            <param name="relativeOrAbsoluteUrl"></param>
            <param name="request"></param>
        </member>
        <member name="T:NServiceKit.Service.IReplyClient">
            <summary>Interface for reply client.</summary>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.Send``1(System.Object)">
            <summary>
            Sends the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.Send``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Sends the specified request.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.Send(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Send this message.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.PostFile``1(System.String,System.IO.FileInfo,System.String)">
             <summary>Posts a file.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="fileToUpload">         The file to upload.</param>
             <param name="mimeType">             Type of the mime.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.PostFile``1(System.String,System.IO.Stream,System.String,System.String)">
             <summary>Posts a file.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="fileToUpload">         The file to upload.</param>
             <param name="fileName">             Filename of the file.</param>
             <param name="mimeType">             Type of the mime.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.PostFileWithRequest``1(System.String,System.IO.FileInfo,System.Object)">
             <summary>Posts a file with request.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="fileToUpload">         The file to upload.</param>
             <param name="request">              The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IReplyClient.PostFileWithRequest``1(System.String,System.IO.Stream,System.String,System.Object)">
             <summary>Posts a file with request.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="fileToUpload">         The file to upload.</param>
             <param name="fileName">             Filename of the file.</param>
             <param name="request">              The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="T:NServiceKit.Service.IResponseBase`2">
             <summary>Interface for response base.</summary>
            
             <typeparam name="TData">          Type of the data.</typeparam>
             <typeparam name="TResponseStatus">Type of the response status.</typeparam>
        </member>
        <member name="P:NServiceKit.Service.IResponseBase`2.Version">
             <summary>Gets or sets the version.</summary>
            
             <value>The version.</value>
        </member>
        <member name="P:NServiceKit.Service.IResponseBase`2.ResponseStatus">
             <summary>Gets or sets the response status.</summary>
            
             <value>The response status.</value>
        </member>
        <member name="P:NServiceKit.Service.IResponseBase`2.ResponseData">
             <summary>Gets or sets information describing the response.</summary>
            
             <value>Information describing the response.</value>
        </member>
        <member name="T:NServiceKit.Service.IResponseStatus">
            <summary>Interface for response status.</summary>
        </member>
        <member name="P:NServiceKit.Service.IResponseStatus.ErrorCode">
             <summary>Gets or sets the error code.</summary>
            
             <value>The error code.</value>
        </member>
        <member name="P:NServiceKit.Service.IResponseStatus.ErrorMessage">
             <summary>Gets or sets a message describing the error.</summary>
            
             <value>A message describing the error.</value>
        </member>
        <member name="P:NServiceKit.Service.IResponseStatus.StackTrace">
             <summary>Gets or sets the stack trace.</summary>
            
             <value>The stack trace.</value>
        </member>
        <member name="P:NServiceKit.Service.IResponseStatus.IsSuccess">
             <summary>Gets a value indicating whether this object is success.</summary>
            
             <value>true if this object is success, false if not.</value>
        </member>
        <member name="T:NServiceKit.Service.IRestClient">
            <summary>Interface for rest client.</summary>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Get``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Gets.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Get(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Gets the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Get``1(System.String)">
             <summary>Gets.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Delete``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Deletes the given relativeOrAbsoluteUrl.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Delete(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Deletes the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Delete``1(System.String)">
             <summary>Deletes the given relativeOrAbsoluteUrl.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Post``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Post this message.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Post(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Post this message.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Post``1(System.String,System.Object)">
             <summary>Post this message.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="request">              The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Put``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Puts.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Put(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Puts the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Put``1(System.String,System.Object)">
             <summary>Puts.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="request">              The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Patch``1(NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Patches.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Patch(NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Patches the given request.</summary>
            
             <param name="request">The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Patch``1(System.String,System.Object)">
             <summary>Patches.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="request">              The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.PostFile``1(System.String,System.IO.FileInfo,System.String)">
             <summary>Posts a file.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
             <param name="fileToUpload">         The file to upload.</param>
             <param name="mimeType">             Type of the mime.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.CustomMethod(System.String,NServiceKit.ServiceHost.IReturnVoid)">
             <summary>Custom method.</summary>
            
             <param name="httpVerb">The HTTP verb.</param>
             <param name="request"> The request.</param>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.CustomMethod``1(System.String,NServiceKit.ServiceHost.IReturn{``0})">
             <summary>Custom method.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="httpVerb">The HTTP verb.</param>
             <param name="request"> The request.</param>
            
             <returns>A TResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Head(NServiceKit.ServiceHost.IReturn)">
             <summary>Heads.</summary>
            
             <param name="request">The request.</param>
            
             <returns>A HttpWebResponse.</returns>
        </member>
        <member name="M:NServiceKit.Service.IRestClient.Head(System.String)">
             <summary>Heads.</summary>
            
             <param name="relativeOrAbsoluteUrl">URL of the relative or absolute.</param>
            
             <returns>A HttpWebResponse.</returns>
        </member>
        <member name="T:NServiceKit.Service.IRestClientAsync">
            <summary>
            A client that makes asynchronous REST requests.
            </summary>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.SetCredentials(System.String,System.String)">
            <summary>
            Set the credentials to be used when making requests.
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.GetAsync``1(NServiceKit.ServiceHost.IReturn{``0},System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Sends the request as an HTTP GET asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.GetAsync``1(System.String,System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Makes an HTTP GET to the specified URL asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="relativeOrAbsoluteUrl"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.DeleteAsync``1(System.String,System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Makes an HTTP DELETE to the specified URL asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="relativeOrAbsoluteUrl"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.DeleteAsync``1(NServiceKit.ServiceHost.IReturn{``0},System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Sends the request as an HTTP DELETE asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.PostAsync``1(NServiceKit.ServiceHost.IReturn{``0},System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Sends the request as an HTTP POST asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.PostAsync``1(System.String,System.Object,System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Makes an HTTP POST to the specified URL asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="relativeOrAbsoluteUrl"></param>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.PutAsync``1(NServiceKit.ServiceHost.IReturn{``0},System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Sends the request as an HTTP PUT asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.PutAsync``1(System.String,System.Object,System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Makes an HTTP PUT to the specified URL asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="relativeOrAbsoluteUrl"></param>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.CustomMethodAsync``1(System.String,NServiceKit.ServiceHost.IReturn{``0},System.Action{``0},System.Action{``0,System.Exception})">
            <summary>
            Sends the specified request with the specified verb asynchronously.
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="httpVerb"></param>
            <param name="request"></param>
            <param name="onSuccess"></param>
            <param name="onError"></param>
        </member>
        <member name="M:NServiceKit.Service.IRestClientAsync.CancelAsync">
            <summary>
            Cancels pending async operations.
            </summary>
        </member>
        <member name="T:NServiceKit.Service.IServiceClient">
            <summary>
            
            </summary>
        </member>
        <member name="T:NServiceKit.Service.IServiceClientAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:NServiceKit.Service.IServiceClientAsync.SendAsync``1(System.Object,System.Action{``0},System.Action{``0,System.Exception})">
             <summary>Sends the asynchronous.</summary>
            
             <typeparam name="TResponse">Type of the response.</typeparam>
             <param name="request">  The request.</param>
             <param name="onSuccess">The on success.</param>
             <param name="onError">  The on error.</param>
        </member>
        <member name="T:NServiceKit.Service.IStreamWriter">
            <summary>Interface for stream writer.</summary>
        </member>
        <member name="M:NServiceKit.Service.IStreamWriter.WriteTo(System.IO.Stream)">
             <summary>Writes to.</summary>
            
             <param name="responseStream">The response stream.</param>
        </member>
        <member name="T:NServiceKit.Translators.TranslateAttribute">
            <summary>
            This instructs the generator tool to generate translator methods for the types supplied.
            A {TypeName}.generated.cs partial class will be generated that contains the methods required
            to generate to and from that type.
            </summary>
        </member>
        <member name="M:NServiceKit.Translators.TranslateAttribute.#ctor(System.Type)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateAttribute class.</summary>
            
             <param name="targetType">Type of the target.</param>
        </member>
        <member name="M:NServiceKit.Translators.TranslateAttribute.#ctor(System.String,System.Type,System.String)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateAttribute class.</summary>
            
             <param name="sourceExtensionPrefix">Source extension prefix.</param>
             <param name="targetType">           Type of the target.</param>
             <param name="targetExtensionPrefix">Target extension prefix.</param>
        </member>
        <member name="M:NServiceKit.Translators.TranslateAttribute.#ctor(System.Type,System.Type)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateAttribute class.</summary>
            
             <param name="sourceType">Type of the source.</param>
             <param name="targetType">Type of the target.</param>
        </member>
        <member name="M:NServiceKit.Translators.TranslateAttribute.#ctor(System.Type,System.String,System.Type,System.String)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateAttribute class.</summary>
            
             <param name="sourceType">           Type of the source.</param>
             <param name="sourceExtensionPrefix">Source extension prefix.</param>
             <param name="targetType">           Type of the target.</param>
             <param name="targetExtensionPrefix">Target extension prefix.</param>
        </member>
        <member name="P:NServiceKit.Translators.TranslateAttribute.SourceMethodPrefix">
             <summary>Gets or sets source method prefix.</summary>
            
             <value>The source method prefix.</value>
        </member>
        <member name="P:NServiceKit.Translators.TranslateAttribute.TargetMethodPrefix">
             <summary>Gets or sets target method prefix.</summary>
            
             <value>The target method prefix.</value>
        </member>
        <member name="P:NServiceKit.Translators.TranslateAttribute.SourceType">
             <summary>Gets or sets the type of the source.</summary>
            
             <value>The type of the source.</value>
        </member>
        <member name="P:NServiceKit.Translators.TranslateAttribute.TargetType">
             <summary>Gets or sets the type of the target.</summary>
            
             <value>The type of the target.</value>
        </member>
        <member name="T:NServiceKit.Translators.TranslateExtensionAttribute">
            <summary>
            This instructs the generator tool to generate translator extension methods for the types supplied.
            A {TypeName}.generated.cs static class will be generated that contains the extension methods required
            to generate to and from that type.
            
            The source type is what the type the attribute is decorated on which can only be resolved at runtime.
            </summary>
        </member>
        <member name="M:NServiceKit.Translators.TranslateExtensionAttribute.#ctor(System.Type,System.Type)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateExtensionAttribute class.</summary>
            
             <param name="sourceType">Type of the source.</param>
             <param name="targetType">Type of the target.</param>
        </member>
        <member name="M:NServiceKit.Translators.TranslateExtensionAttribute.#ctor(System.Type,System.String,System.Type,System.String)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateExtensionAttribute class.</summary>
            
             <param name="sourceType">           Type of the source.</param>
             <param name="sourceExtensionPrefix">Source extension prefix.</param>
             <param name="targetType">           Type of the target.</param>
             <param name="targetExtensionPrefix">Target extension prefix.</param>
        </member>
        <member name="T:NServiceKit.Translators.TranslateMemberAttribute">
            <summary>
            This changes the default behaviour for the 
            </summary>
        </member>
        <member name="M:NServiceKit.Translators.TranslateMemberAttribute.#ctor(System.String)">
             <summary>Initializes a new instance of the NServiceKit.Translators.TranslateMemberAttribute class.</summary>
            
             <param name="toPropertyName">Name of to property.</param>
        </member>
        <member name="P:NServiceKit.Translators.TranslateMemberAttribute.PropertyName">
             <summary>Gets or sets the name of the property.</summary>
            
             <value>The name of the property.</value>
        </member>
    </members>
</doc>
